{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var AUTHENTICATEOTP = 'AUTHENTICATEOTP';\nexport var AUTHENTICATEUSER = 'AUTHENTICATEUSER';\nexport var ACCESSUSER = 'ACCESSUSER';\nexport var USERDETAILL = 'USERDETAILL';\nexport var USERDETAILLALL = 'USERDETAILLALL';\nexport var DONOTALLOW = 'DONOTALLOW';\nexport var STDETAIL = 'STDETAIL';\n\nvar clearAsyncStorage = function clearAsyncStorage() {\n  return _regeneratorRuntime.async(function clearAsyncStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport var accesslogin = function accesslogin(data) {\n  return {\n    type: ACCESSUSER,\n    status: data\n  };\n};\nexport var authenticateotp = function authenticateotp(otp) {\n  return {\n    type: AUTHENTICATEOTP,\n    otp: otp\n  };\n};\nexport var authenticateuser = function authenticateuser(stu_id) {\n  return {\n    type: AUTHENTICATEUSER,\n    stu_id: stu_id\n  };\n};\nexport var userdetail = function userdetail(data) {\n  return {\n    type: USERDETAILL,\n    data: data\n  };\n};\nexport var userdetailalls = function userdetailalls(data) {\n  return {\n    type: USERDETAILLALL,\n    Alldata: data\n  };\n};\nexport var donotallowuser = function donotallowuser(data) {\n  clearAsyncStorage();\n  return {\n    type: DONOTALLOW,\n    ttr: data\n  };\n};\nexport var studentidd = function studentidd(data) {\n  return {\n    type: STDETAIL,\n    tts: data\n  };\n};\nexport var login = function login(school_id, mobile, password) {\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = {\n              school_id: school_id,\n              mobile: mobile,\n              password: password\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context2.sent;\n\n            if (!(response.status != 200)) {\n              _context2.next = 9;\n              break;\n            }\n\n            throw new Error('Invalid mobile no. or password!');\n\n          case 9:\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context2.sent;\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@auth', JSON.stringify(resdata.data)));\n\n          case 14:\n            dispatch(userdetailalls(resdata.data.st_name));\n            dispatch(accesslogin(resdata.status));\n            dispatch(studentidd(resdata.data.st_id));\n            dispatch(userdetail(resdata.data));\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var Signupp = function Signupp(school_id, board_id, mobile, password, name) {\n  return function _callee2(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata, credentials;\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            details = {\n              school_id: school_id,\n              board_id: board_id,\n              mobile: mobile,\n              password: password,\n              name: name\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/register', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context3.sent;\n\n            if (!(response.status != 200)) {\n              _context3.next = 9;\n              break;\n            }\n\n            throw new Error('error');\n\n          case 9:\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context3.sent;\n            credentials = resdata.data;\n            dispatch(authenticateotp(credentials.otp));\n            dispatch(authenticateuser(credentials.st_id));\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/store/action/auth.js"],"names":["AsyncStorage","AUTHENTICATEOTP","AUTHENTICATEUSER","ACCESSUSER","USERDETAILL","USERDETAILLALL","DONOTALLOW","STDETAIL","clearAsyncStorage","clear","accesslogin","data","type","status","authenticateotp","otp","authenticateuser","stu_id","userdetail","userdetailalls","Alldata","donotallowuser","ttr","studentidd","tts","login","school_id","mobile","password","dispatch","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","Error","json","resdata","setItem","JSON","stringify","st_name","st_id","Signupp","board_id","name","credentials"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage'\nexport const AUTHENTICATEOTP='AUTHENTICATEOTP';\nexport const AUTHENTICATEUSER='AUTHENTICATEUSER';\nexport const ACCESSUSER='ACCESSUSER';\nexport const USERDETAILL='USERDETAILL';\nexport const USERDETAILLALL='USERDETAILLALL';\nexport const DONOTALLOW='DONOTALLOW';\nexport const STDETAIL='STDETAIL';\n\nconst clearAsyncStorage = async() => {\n    await AsyncStorage.clear();\n}\n\nexport const accesslogin=(data)=>{\n    return{type:ACCESSUSER,status:data}\n}\nexport const authenticateotp=(otp)=>{\n    return {type:AUTHENTICATEOTP,otp:otp}\n}\nexport const authenticateuser=(stu_id)=>{\n    return{type:AUTHENTICATEUSER,stu_id:stu_id}\n}\nexport const userdetail=(data)=>{\n    return{ type:USERDETAILL,data:data}\n}\nexport const userdetailalls=(data)=>{\n    return {type:USERDETAILLALL,Alldata:data}\n}\nexport const donotallowuser=(data)=>{\n    clearAsyncStorage()\n    return{type:DONOTALLOW,ttr:data}\n}\nexport const studentidd=(data)=>{\n    return{type:STDETAIL,tts:data}\n}\n\nexport const login=(school_id,mobile,password)=>{\n    return async dispatch=>{\n      let details = {\n        school_id:school_id,\n        mobile:mobile,\n        password:password,\n    };\n\n    let formBody = []; \n    for (let property in details) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    const response=await fetch('http://ais.omsai.info/api/v1/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formBody\n    })\n    if(response.status!=200){\n        throw new Error('Invalid mobile no. or password!')\n    }\n    const resdata=await response.json();\n    await AsyncStorage.setItem('@auth', JSON.stringify(resdata.data))\n     dispatch(userdetailalls(resdata.data.st_name))\n     dispatch(accesslogin(resdata.status))\n     dispatch(studentidd(resdata.data.st_id))\n     dispatch(userdetail(resdata.data))\n    }\n}\n\nexport const Signupp=(school_id,board_id,mobile,password,name)=>{\n    return async dispatch=>{\n        let details = {\n            school_id:school_id,\n            board_id:board_id,\n            mobile:mobile,\n            password:password,\n            name:name,\n        }\n\n        let formBody = [];\n        for (let property in details) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        const response=await fetch('http://ais.omsai.info/api/v1/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n        })\n        if(response.status!=200){\n            throw new Error('error')\n        }\n        const resdata=await response.json();\n        const  credentials=resdata.data\n        dispatch(authenticateotp(credentials.otp))\n        dispatch(authenticateuser(credentials.st_id))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}