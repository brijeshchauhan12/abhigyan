{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var BOARDLIST = 'BOARDLIST';\nexport var allboardlist = function allboardlist(data) {\n  return {\n    type: BOARDLIST,\n    dataarray: data\n  };\n};\nexport var board_list = function board_list(school_id) {\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata, data, i;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            details = {\n              school_id: school_id\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/board_list', {\n              method: 'POST',\n              headers: {\n                'Authorization': 'Bearer token',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.status != 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"there may be some entries missing\");\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context.sent;\n            console.log(resdata.data);\n            data = resdata.data;\n\n            if (data.length > 0) {\n              for (i = 0; i < data.length; i++) {\n                console.log(data[i].br_id + data[i].created_at + data[i].name + data[i].status + data[i].updated_at);\n              }\n            }\n\n            dispatch(allboardlist(data));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/Projects/react_native/Abhigyaan/store/action/boardlist.js"],"names":["BOARDLIST","allboardlist","data","type","dataarray","board_list","school_id","dispatch","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","status","Error","json","resdata","console","log","length","i","br_id","created_at","name","updated_at"],"mappings":";AAAA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEH,SAAR;AAAmBI,IAAAA,SAAS,EAAEF;AAA9B,GAAP;AACH,CAFM;AAGP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAAe;AAErC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,YAAAA,OAFD,GAEW;AACVF,cAAAA,SAAS,EAAEA;AADD,aAFX;AAOCG,YAAAA,QAPD,GAOY,EAPZ;;AAQH,iBAASC,QAAT,IAAqBF,OAArB,EAA8B;AACtBG,cAAAA,UADsB,GACTC,kBAAkB,CAACF,QAAD,CADT;AAEtBG,cAAAA,YAFsB,GAEPD,kBAAkB,CAACJ,OAAO,CAACE,QAAD,CAAR,CAFX;AAG1BD,cAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACH;;AACDJ,YAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AAbG;AAAA,6CAeoBC,KAAK,CAAC,yCAAD,EAA4C;AACpEC,cAAAA,MAAM,EAAE,MAD4D;AAEpEC,cAAAA,OAAO,EAAE;AACL,iCAAiB,cADZ;AAEL,gCAAgB;AAFX,eAF2D;AAMpEC,cAAAA,IAAI,EAAEV;AAN8D,aAA5C,CAfzB;;AAAA;AAeGW,YAAAA,QAfH;;AAAA,kBAuBCA,QAAQ,CAACC,MAAT,IAAmB,GAvBpB;AAAA;AAAA;AAAA;;AAAA,kBA0BO,IAAIC,KAAJ,CAAU,mCAAV,CA1BP;;AAAA;AAAA;AAAA,6CA6BmBF,QAAQ,CAACG,IAAT,EA7BnB;;AAAA;AA6BGC,YAAAA,OA7BH;AAgCHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACtB,IAApB;AAEMA,YAAAA,IAlCH,GAkCUsB,OAAO,CAACtB,IAlClB;;AAmCH,gBAAIA,IAAI,CAACyB,MAAL,GAAc,CAAlB,EAAqB;AACjB,mBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAG1B,IAAI,CAACyB,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClCH,gBAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAAC0B,CAAD,CAAJ,CAAQC,KAAR,GAAgB3B,IAAI,CAAC0B,CAAD,CAAJ,CAAQE,UAAxB,GAAqC5B,IAAI,CAAC0B,CAAD,CAAJ,CAAQG,IAA7C,GAAoD7B,IAAI,CAAC0B,CAAD,CAAJ,CAAQP,MAA5D,GAAqEnB,IAAI,CAAC0B,CAAD,CAAJ,CAAQI,UAAzF;AACH;AACJ;;AACDzB,YAAAA,QAAQ,CAACN,YAAY,CAACC,IAAD,CAAb,CAAR;;AAxCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA0CH,CA5CM","sourcesContent":["export const BOARDLIST = 'BOARDLIST'\r\nexport const allboardlist = (data) => {\r\n    return { type: BOARDLIST, dataarray: data }\r\n}\r\nexport const board_list = (school_id) => {\r\n\r\n    return async dispatch => {\r\n\r\n        let details = {\r\n            school_id: school_id,\r\n\r\n        };\r\n\r\n        let formBody = [];\r\n        for (let property in details) {\r\n            let encodedKey = encodeURIComponent(property);\r\n            let encodedValue = encodeURIComponent(details[property]);\r\n            formBody.push(encodedKey + \"=\" + encodedValue);\r\n        }\r\n        formBody = formBody.join(\"&\");\r\n\r\n        const response = await fetch('http://ais.omsai.info/api/v1/board_list', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer token',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: formBody\r\n        })\r\n        if (response.status != 200) {\r\n\r\n\r\n            throw new Error(\"there may be some entries missing\")\r\n\r\n        }\r\n        const resdata = await response.json();\r\n\r\n        //dispatch(authenticate(otp))\r\n        console.log(resdata.data)\r\n            // console.log(otp)\r\n        const data = resdata.data;\r\n        if (data.length > 0) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                console.log(data[i].br_id + data[i].created_at + data[i].name + data[i].status + data[i].updated_at)\r\n            }\r\n        }\r\n        dispatch(allboardlist(data))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}