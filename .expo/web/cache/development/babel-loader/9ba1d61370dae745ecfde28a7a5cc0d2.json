{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var profileupdateofstudent = function profileupdateofstudent(student_id, student_name, student_email, father_name, mother_name, dob, gender, address) {\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            details = {\n              student_id: student_id,\n              student_name: student_name,\n              student_email: student_email,\n              father_name: father_name,\n              mother_name: mother_name,\n              dob: dob,\n              gender: gender,\n              address: address\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/profile_update', {\n              method: 'POST',\n              headers: {\n                'Authorization': 'Bearer token',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            resdata = _context.sent;\n            console.log(\"##########the the data of the updated user\");\n            console.log(resdata);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/Projects/react_native/Abhigyaan/store/action/profileupdate.js"],"names":["profileupdateofstudent","student_id","student_name","student_email","father_name","mother_name","dob","gender","address","dispatch","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","json","resdata","console","log"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAC,SAAvBA,sBAAuB,CAACC,UAAD,EAAYC,YAAZ,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,WAAnD,EAA+DC,GAA/D,EAAmEC,MAAnE,EAA0EC,OAA1E,EAAoF;AAEpH,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,YAAAA,OAFC,GAES;AACbT,cAAAA,UAAU,EAACA,UADE;AAEbC,cAAAA,YAAY,EAACA,YAFA;AAGbC,cAAAA,aAAa,EAACA,aAHD;AAIbC,cAAAA,WAAW,EAACA,WAJC;AAKbC,cAAAA,WAAW,EAACA,WALC;AAMbC,cAAAA,GAAG,EAACA,GANS;AAObC,cAAAA,MAAM,EAACA,MAPM;AAQbC,cAAAA,OAAO,EAACA;AARK,aAFT;AAcHG,YAAAA,QAdG,GAcQ,EAdR;;AAeP,iBAASC,QAAT,IAAqBF,OAArB,EAA8B;AACtBG,cAAAA,UADsB,GACTC,kBAAkB,CAACF,QAAD,CADT;AAEtBG,cAAAA,YAFsB,GAEPD,kBAAkB,CAACJ,OAAO,CAACE,QAAD,CAAR,CAFX;AAG1BD,cAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACH;;AACDJ,YAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AApBO;AAAA,6CAsBaC,KAAK,CAAC,6CAAD,EAAgD;AACrEC,cAAAA,MAAM,EAAE,MAD6D;AAErEC,cAAAA,OAAO,EAAE;AACL,iCAAiB,cADZ;AAEL,gCAAgB;AAFX,eAF4D;AAMrEC,cAAAA,IAAI,EAAEV;AAN+D,aAAhD,CAtBlB;;AAAA;AAsBFW,YAAAA,QAtBE;AAAA;AAAA,6CAoCaA,QAAQ,CAACC,IAAT,EApCb;;AAAA;AAoCDC,YAAAA,OApCC;AA4CRC,YAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACCD,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AA7CO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA+CH,CAjDM","sourcesContent":["export const profileupdateofstudent=(student_id,student_name,student_email,father_name,mother_name,dob,gender,address)=>{\r\n    \r\n    return async dispatch=>{\r\n\r\n      let details = {\r\n       student_id:student_id,\r\n       student_name:student_name,\r\n       student_email:student_email,\r\n       father_name:father_name,\r\n       mother_name:mother_name,\r\n       dob:dob,\r\n       gender:gender,\r\n       address:address\r\n       \r\n    };\r\n\r\n    let formBody = [];\r\n    for (let property in details) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(details[property]);\r\n        formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n   const response=await fetch('http://ais.omsai.info/api/v1/profile_update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': 'Bearer token',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: formBody\r\n    })\r\n    // if(response.status!=200){\r\n\r\n\r\n    //     throw new Error(\"there may be some entries missing\")\r\n\r\n    // }\r\n    const resdata=await response.json();\r\n    // if(resdata.status=!200){\r\n    //     throw new Error(\"there may be some entries missing\")\r\n    // }\r\n//    const  otp=resdata.data.otp\r\n // dispatch(userprofille(resdata.data))\r\n//    console.log(resdata)\r\n//    console.log(otp)\r\n   console.log(\"##########the the data of the updated user\")\r\n    console.log(resdata)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}