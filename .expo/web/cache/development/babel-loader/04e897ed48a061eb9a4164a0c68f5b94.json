{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\react_native\\\\Abhigyaan\\\\screens\\\\signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Const from \"../components/constant\";\nimport UseTextInput from \"../components/textinput\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as loginAction from \"../store/action/auth\";\nimport * as boarddetail from \"../store/action/boardlist\";\nimport Eye from \"../assets/eye.tsx\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      securer = _useState4[0],\n      setsecurer = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enteredmobile = _useState6[0],\n      setenteredmobile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      enteredPassword = _useState8[0],\n      setenteredpassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      enteredname = _useState10[0],\n      setenteredname = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      seterror = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isloading = _useState14[0],\n      setisloading = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isloadingm = _useState16[0],\n      setisloadingm = _useState16[1];\n\n  var dispatch = useDispatch();\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedValue = _useState18[0],\n      setSelectedValue = _useState18[1];\n\n  console.log(\"*********************\");\n  console.log(\"this is data needed\" + enteredname + \"***\" + enteredPassword + \"***\" + enteredmobile + \"****\" + Const.school_id + \"****\" + selectedValue);\n  console.log(\"this is the selected value\" + selectedValue);\n  console.log(\"**********************\");\n\n  var AuthHandler = function AuthHandler() {\n    return _regeneratorRuntime.async(function AuthHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            seterror(null);\n            setisloading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(loginAction.Signupp(Const.school_id, selectedValue, enteredmobile, enteredPassword, enteredname)));\n\n          case 5:\n            navigation.navigate(\"Confirmation\");\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            seterror(_context.t0.message);\n            console.log(\"this is the eroor\" + _context.t0);\n            setisloading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  };\n\n  var BoardList = function BoardList() {\n    return _regeneratorRuntime.async(function BoardList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setisloadingm(true);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(boarddetail.board_list(Const.school_id)));\n\n          case 4:\n            console.log(\"executed\");\n            setisloadingm(false);\n            _context2.next = 10;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var data = useSelector(function (state) {\n    return state.Allboard.allboardlist;\n  });\n  useEffect(function () {\n    if (error) {\n      Alert.alert('An Error Occurred!', error, [{\n        text: 'Okay'\n      }]);\n    }\n\n    BoardList();\n  }, [error]);\n\n  var mobileinputhandler = function mobileinputhandler(enteredText) {\n    setenteredmobile(enteredText);\n  };\n\n  var passwordinputhandler = function passwordinputhandler(enteredText) {\n    setenteredpassword(enteredText);\n  };\n\n  var nameinputhandler = function nameinputhandler(enteredText) {\n    setenteredname(enteredText);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#016129', '#016129'],\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      height: 370\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }\n  }), React.createElement(ImageBackground, {\n    style: styles.backgroundimage,\n    source: require(\"../assets/drawable-xxxhdpi/background.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dabba,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.welcome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Join millions of students sharing their experience\"), React.createElement(View, {\n    style: {\n      height: 40,\n      borderWidth: .5,\n      borderColor: '#ADEEB4',\n      borderRadius: 5,\n      paddingBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 16\n    }\n  }, isloadingm ? React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 24\n    }\n  }) : React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 18\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"selectboard\",\n    value: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }), data.map(function (dat, index) {\n    return React.createElement(Picker.Item, {\n      key: index,\n      label: dat.name,\n      value: dat.br_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 43\n      }\n    });\n  }))), React.createElement(Text, {\n    style: styles.urnam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, \"Mobile*\"), React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"9923283721\",\n    keyboardtype: \"default\",\n    onChangeText: mobileinputhandler,\n    value: enteredmobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.urnam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, \"name*\"), React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"Full Name\",\n    keyboardtype: \"default\",\n    onChangeText: nameinputhandler,\n    value: enteredname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.urnam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, \"Password\"), React.createElement(View, {\n    style: styles.eye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: 290,\n      borderRightWidth: 0,\n      height: 50\n    },\n    placeholder: \"******\",\n    keyboardtype: \"default\",\n    onChangeText: passwordinputhandler,\n    value: enteredPassword,\n    secureTextEntry: securer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 16\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setsecurer(!securer);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 16\n    }\n  }, React.createElement(View, {\n    style: styles.eeeye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, securer ? React.createElement(Ionicons, {\n    name: \"md-eye-off\",\n    size: 24,\n    color: \"#C1C1C1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 24\n    }\n  }) : React.createElement(Ionicons, {\n    name: \"md-eye\",\n    size: 24,\n    color: \"#C1C1C1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 81\n    }\n  })))), React.createElement(TouchableOpacity, {\n    onPress: AuthHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#C53030', '#C53030'],\n    start: [.9, .0],\n    style: {\n      padding: 15,\n      alignItems: 'center',\n      borderRadius: 5,\n      width: 200,\n      marginLeft: 60,\n      marginTop: 55\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 14\n    }\n  }, isloading ? React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }) : React.createElement(Text, {\n    style: {\n      backgroundColor: 'transparent',\n      fontSize: 16,\n      color: '#fff',\n      fontFamily: \"Poppins-Bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, \"Submit\")))), React.createElement(View, {\n    style: styles.afterdabba,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: styles.newuserr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }, \"Registered User?\"), React.createElement(Text, {\n    style: styles.signup,\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, \"Login\")))));\n};\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  },\n  logo: {\n    backgroundColor: \"white\",\n    height: 72,\n    width: 72,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    marginTop: 90,\n    marginLeft: 158,\n    borderRadius: 40\n  },\n  image: {\n    width: 72,\n    height: 72,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: \"#F1F9FF\"\n  },\n  user: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  username: {\n    fontSize: 22,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#F1F9FF\"\n  },\n  backgroundimage: {\n    height: \"120%\"\n  },\n  dabba: {\n    backgroundColor: \"white\",\n    height: 540,\n    marginHorizontal: 20,\n    borderRadius: 5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    marginTop: 150,\n    paddingHorizontal: 15,\n    borderColor: \"#5EB668\",\n    borderWidth: .4\n  },\n  welcome: {\n    marginTop: 20,\n    color: '#1D2327',\n    fontSize: 18,\n    fontFamily: \"Poppins-Bold\"\n  },\n  urnam: {\n    fontFamily: \"Poppins-Regular\",\n    marginTop: 6,\n    color: '#1D2327',\n    fontSize: 14\n  },\n  innput: {\n    height: 40,\n    marginTop: 20\n  },\n  logbutton: {\n    marginTop: 10,\n    width: 184,\n    height: 40\n  },\n  bulogin: {\n    fontSize: 16,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#FFFFFF\"\n  },\n  afterdabba: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20\n  },\n  newuserr: {\n    color: \"#1D2327\",\n    fontSize: 10\n  },\n  signup: {\n    color: '#007E59',\n    fontFamily: \"Poppins-Regular\",\n    fontSize: 10\n  },\n  forgatepaas: {\n    marginTop: 20,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  eye: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: .5,\n    borderColor: '#ADEEB4',\n    borderRadius: 5\n  },\n  textinputstyle: {\n    height: 50,\n    borderWidth: .5,\n    borderColor: '#ADEEB4',\n    borderRadius: 5,\n    paddingLeft: 5\n  },\n  modell: {\n    width: \"5%\",\n    marginLeft: 289,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"yellow\"\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["D:/Projects/react_native/Abhigyaan/screens/signup.js"],"names":["React","useState","useEffect","Const","UseTextInput","LinearGradient","Ionicons","loginAction","boarddetail","Eye","useSelector","useDispatch","Signup","navigation","modalVisible","setModalVisible","securer","setsecurer","enteredmobile","setenteredmobile","enteredPassword","setenteredpassword","enteredname","setenteredname","error","seterror","isloading","setisloading","isloadingm","setisloadingm","dispatch","selectedValue","setSelectedValue","console","log","school_id","AuthHandler","Signupp","navigate","message","BoardList","board_list","data","state","Allboard","allboardlist","Alert","alert","text","mobileinputhandler","enteredText","passwordinputhandler","nameinputhandler","styles","main","position","left","right","top","height","backgroundimage","require","dabba","welcome","borderWidth","borderColor","borderRadius","paddingBottom","itemValue","itemIndex","map","dat","index","name","br_id","urnam","textinputstyle","eye","width","borderRightWidth","eeeye","padding","alignItems","marginLeft","marginTop","backgroundColor","fontSize","color","fontFamily","afterdabba","newuserr","signup","StyleSheet","create","flex","logo","justifyContent","image","user","username","marginHorizontal","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","paddingHorizontal","innput","logbutton","bulogin","flexDirection","forgatepaas","paddingLeft","modell"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect,}from 'react';\r\nimport {Text,View,StyleSheet,\r\n    TouchableOpacity,Image,ImageBackground,\r\n    TextInput,\r\n    ScrollView,\r\n    ActivityIndicator,\r\n    Alert,\r\n    Picker,\r\n    Modal\r\n} from 'react-native';\r\nimport Const from '../components/constant';\r\nimport UseTextInput from '../components/textinput';\r\n//import PushNotification from 'react-native-push-notification'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n//import LinearGradient from 'react-native-linear-gradient';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport * as loginAction from '../store/action/auth';\r\nimport * as boarddetail from '../store/action/boardlist';\r\nimport Eye from '../assets/eye.tsx';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\n\r\n// PushNotification.configure({\r\n//   // (optional) Called when Token is generated (iOS and Android)\r\n//   onRegister: function (token) {\r\n//     console.log(\"TOKEN:\", token);\r\n//   },\r\n\r\n//   // (required) Called when a remote is received or opened, or local notification is opened\r\n//   onNotification: function (notification) {\r\n//     console.log(\"NOTIFICATION:\", notification);\r\n\r\n//     // process the notification\r\n\r\n//     // (required) Called when a remote is received or opened, or local notification is opened\r\n//    // notification.finish(PushNotificationIOS.FetchResult.NoData);\r\n//   },\r\n\r\n//   // (optional) Called when Registered Action is pressed and invokeApp is false, if true onNotification will be called (Android)\r\n//   // onAction: function (notification) {\r\n//   //   console.log(\"ACTION:\", notification.action);\r\n//   //   console.log(\"NOTIFICATION:\", notification);\r\n\r\n//   //   // process the action\r\n//   // },\r\n\r\n//   // (optional) Called when the user fails to register for remote notifications. Typically occurs when APNS is having issues, or the device is a simulator. (iOS)\r\n//   // onRegistrationError: function(err) {\r\n//   //   console.error(err.message, err);\r\n//   // },\r\n\r\n//   // IOS ONLY (optional): default: all - Permissions to register.\r\n//   permissions: {\r\n//     alert: true,\r\n//     badge: true,\r\n//     sound: true,\r\n//   },\r\n\r\n//   // Should the initial notification be popped automatically\r\n//   // default: true\r\n//   popInitialNotification: true,\r\n\r\n//   /**\r\n//    * (optional) default: true\r\n//    * - Specified if permissions (ios) and token (android and ios) will requested or not,\r\n//    * - if not, you must call PushNotificationsHandler.requestPermissions() later\r\n//    * - if you are not using remote notification or do not have Firebase installed, use this:\r\n//    *     requestPermissions: Platform.OS === 'ios'\r\n//    */\r\n//   requestPermissions: true,\r\n// });\r\n// testpush=()=>{PushNotification.localNotification({\r\n \r\n//   title: \"My Notification Title\", // (optional)\r\n//   message: \"My Notification Message\", // (require)\r\n  \r\n// })}\r\nconst Signup=({navigation})=>{\r\n  \r\n  const [modalVisible, setModalVisible] = useState(true);\r\n    const [securer,setsecurer]=useState(false)\r\n    // const [enteredschol0_id,setenteredschool_id]=useState(\"\")\r\n    // const [enteredboard_id,setenteredboard_id]=useState('');\r\n    const [enteredmobile,setenteredmobile]=useState('');\r\n    const [enteredPassword,setenteredpassword]=useState('');\r\n    const [enteredname,setenteredname]=useState(\"\");\r\n    const [error,seterror]=useState();\r\n    const [isloading, setisloading]=useState(false);\r\n    const [isloadingm,setisloadingm]=useState(false);\r\n    const dispatch=useDispatch();\r\n    const [selectedValue, setSelectedValue] = useState(1);\r\n    console.log(\"*********************\")\r\n    console.log(\"this is data needed\"+enteredname +\"***\"+enteredPassword+\"***\"+enteredmobile+\"****\"+Const.school_id+\"****\"+selectedValue)\r\n    console.log(\"this is the selected value\"+selectedValue)\r\n    console.log(\"**********************\")\r\n    const AuthHandler=async()=>{\r\n        \r\n    //   action=loginAction.login(\r\n    //               enteredUserName,\r\n    //               enteredPassword\r\n    //             );\r\n  \r\n    \r\n       seterror(null)\r\n      setisloading(true)\r\n       try{\r\n        await dispatch(loginAction.Signupp(Const.school_id,selectedValue,enteredmobile,enteredPassword,enteredname))\r\n       \r\n         navigation.navigate(\"Confirmation\")\r\n       }catch(error){\r\n          seterror(error.message)\r\n          console.log(\"this is the eroor\"+error)\r\n          setisloading(false) \r\n        \r\n        \r\n      \r\n     }\r\n     \r\n    \r\n    };\r\n  \r\n const BoardList= async()=>{\r\n     // seterror(null)\r\n      setisloadingm(true)\r\n      try{\r\n        await dispatch(boarddetail.board_list(Const.school_id))\r\n        console.log(\"executed\")\r\n        setisloadingm(false) \r\n      }catch(err){\r\n      //  seterror(err.message)\r\n        \r\n      }\r\n    }  \r\n\r\nconst data=useSelector(state=>state.Allboard.allboardlist)\r\n     //console.log(allboards.message)\r\n   //  console.log(allboards.data.name)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if (error) {\r\n          Alert.alert('An Error Occurred!', error, [{ text: 'Okay' }]);\r\n        }\r\n        BoardList()\r\n      }, [error]);\r\n    \r\n    \r\n   \r\n    const mobileinputhandler=(enteredText)=>{\r\n        setenteredmobile(enteredText)\r\n    }\r\n    const passwordinputhandler=(enteredText)=>{\r\n        setenteredpassword(enteredText);\r\n    } \r\n    const nameinputhandler=(enteredText)=>{\r\n        setenteredname(enteredText)\r\n    }\r\n    return(\r\n        <ScrollView>\r\n        <View style={styles.main}>\r\n       \r\n               <LinearGradient\r\n           // Background Linear Gradient\r\n               colors={['#016129', '#016129']}\r\n            //    start={[.9,.0]}\r\n                style={{\r\n                   position: 'absolute',\r\n                  left: 0,\r\n                     right: 0,\r\n                    top: 0,\r\n                  height: 370,\r\n                  \r\n                  }}\r\n                 />\r\n      \r\n                \r\n            <ImageBackground  style={styles.backgroundimage} source={require(\"../assets/drawable-xxxhdpi/background.png\")}>\r\n           {/* <View style={styles.logo}>\r\n           <Image style={styles.image} source={require('../assets/drawable-hdpi/image5.png')}/>\r\n           </View> */}\r\n           {/* <View>\r\n           <View style={styles.user}>\r\n                <Text style={styles.username}> ABHIGYAAN</Text>\r\n           </View></View> */}\r\n           \r\n           <View style={styles.dabba}>\r\n                <Text style={styles.welcome}>Join millions of students sharing their experience</Text>\r\n         {/* <View>\r\n        <View  style={styles.modell}>\r\n      \r\n            <TouchableOpacity\r\n          \r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n                BoardList()\r\n              }}\r\n            >\r\n            <Ionicons name=\"md-arrow-dropdown\" size={24} color=\"black\" />\r\n            </TouchableOpacity>\r\n        \r\n        </View>\r\n      </View> */}\r\n                {/* <Text    onPress={BoardList}>check</Text> */}\r\n              {/* <Text style={styles.urnam}>School_id*</Text>\r\n             <TextInput \r\n              style={styles.textinputstyle}\r\n               placeholder=\"school_id\"\r\n                keyboardtype=\"number-pad\"\r\n            \r\n                onChangeText={goalInputHandler1}\r\n                value={enteredschol0_id}\r\n                /> */}\r\n            {/* <Text style={styles.urnam}>Board_id</Text> */}\r\n            {/* <View style={styles.eye}> */}\r\n              {/* <TextInput \r\n              style={styles.textinputstyle} \r\n              placeholder=\"board_id\"\r\n               keyboardtype=\"email-address\"\r\n               \r\n               onChangeText={goalInputHandler2}\r\n               value={enteredboard_id}\r\n            \r\n               /> */}\r\n            \r\n               <View style={{    height:40,\r\n                    borderWidth:.5,\r\n                    borderColor:'#ADEEB4',\r\n                    borderRadius:5,  \r\n                    paddingBottom:5,\r\n                 \r\n                  }}>\r\n              \r\n           {isloadingm?<ActivityIndicator/>:      \r\n                 <Picker\r\n                \r\n                  selectedValue={selectedValue}\r\n                  style={{    height:50 }}\r\n                   onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\r\n                  \r\n                  >\r\n                  \r\n         \r\n                  <Picker.Item label={\"selectboard\"} value={0} />\r\n         \r\n                  {data.map((dat,index)=> <Picker.Item  key={index} label={dat.name} value={dat.br_id} />)}\r\n               \r\n             \r\n                 </Picker>\r\n                \r\n           }\r\n               \r\n      \r\n               \r\n                 </View>\r\n            \r\n              <Text style={styles.urnam}>Mobile*</Text>\r\n            {/* <View style={styles.eye}> */}\r\n              <TextInput \r\n              style={styles.textinputstyle} \r\n               placeholder=\"9923283721\" \r\n               keyboardtype=\"default\"\r\n            \r\n               onChangeText={mobileinputhandler}\r\n               value={enteredmobile}\r\n               />\r\n              <Text style={styles.urnam}>name*</Text>\r\n            {/* <View style={styles.eye}> */}\r\n              <TextInput \r\n              style={styles.textinputstyle}\r\n               placeholder=\"Full Name\"\r\n                keyboardtype=\"default\"\r\n                \r\n                onChangeText={nameinputhandler}\r\n                value={enteredname}\r\n                />\r\n              <Text style={styles.urnam}>Password</Text>\r\n              <View style={styles.eye}>\r\n               <TextInput \r\n               style={{width:290,borderRightWidth:0,height:50}}\r\n                placeholder=\"******\"\r\n                 keyboardtype=\"default\"\r\n                \r\n                 onChangeText={passwordinputhandler}\r\n                 value={enteredPassword}\r\n                 secureTextEntry={securer}\r\n                 />\r\n               <TouchableOpacity onPress={()=>setsecurer(!securer)}>\r\n              <View style={styles.eeeye} >\r\n            {securer?  <Ionicons name=\"md-eye-off\" size={24} color=\"#C1C1C1\" />:<Ionicons name=\"md-eye\" size={24} color=\"#C1C1C1\" />}\r\n                  </View>   \r\n             </TouchableOpacity>\r\n              </View>\r\n              <TouchableOpacity\r\n         onPress={AuthHandler}\r\n        >\r\n             <LinearGradient\r\n          // Button Linear Gradient\r\n         \r\n          colors={['#C53030', '#C53030']}\r\n          start={[.9,.0]}\r\n          style={{ padding: 15,\r\n           alignItems: 'center',\r\n            borderRadius: 5,\r\n            width:200,\r\n            marginLeft:60,\r\n            marginTop:55 }}>\r\n         {isloading?<ActivityIndicator/>:(       \r\n          <Text\r\n            style={{\r\n              backgroundColor: 'transparent',\r\n              fontSize: 16,\r\n              color: '#fff',\r\n              fontFamily:\"Poppins-Bold\"\r\n            }}>\r\n          Submit\r\n          </Text>)}\r\n        </LinearGradient>\r\n    </TouchableOpacity>\r\n         </View>\r\n           <View style={styles.afterdabba}>\r\n              <Text style={styles.newuserr}>Registered User?</Text>\r\n              <Text style={styles.signup} onPress={()=>navigation.navigate('Login')}>Login</Text>\r\n           </View>\r\n        \r\n           </ImageBackground>\r\n           \r\n        </View>\r\n        </ScrollView>\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n  main:{\r\n      flex:1,\r\n     // backgroundColor:\"green\"\r\n  },\r\n  logo:{\r\n      backgroundColor:\"white\",\r\n      height:72,\r\n      width:72,\r\n      justifyContent:\"center\",\r\n      alignItems:'center',\r\n      marginTop:90,\r\n     marginLeft:158,\r\n     borderRadius:40,\r\n    \r\n      \r\n  },\r\n  image:{\r\n      width:72,\r\n      height:72,\r\n      borderRadius:40,\r\n      borderWidth:3,\r\n      borderColor:\"#F1F9FF\"\r\n  },\r\n  user:{\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      marginTop:10\r\n  },\r\n  username:{\r\n      fontSize:22,\r\n      fontFamily:\"Poppins-Bold\",\r\n      color:\"#F1F9FF\"\r\n  },\r\n  backgroundimage:{\r\n  height:\"120%\"\r\n  },\r\n  dabba:{\r\n      backgroundColor:\"white\",\r\n      height:540,\r\n      marginHorizontal:20,\r\n      borderRadius:5,\r\n      shadowColor: \"black\",\r\n      shadowOpacity: 0.26,\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowRadius: 8,\r\n      elevation: 5,\r\n      marginTop:150,\r\n      paddingHorizontal:15,\r\n      borderColor:\"#5EB668\",\r\n      borderWidth:.4\r\n  },\r\n  welcome:{\r\n      marginTop:20,\r\n      color:'#1D2327',\r\n      fontSize:18,\r\n      fontFamily:\"Poppins-Bold\"\r\n  },\r\n  urnam:{\r\n      fontFamily:\"Poppins-Regular\",\r\n    marginTop:6,\r\n      color:'#1D2327',\r\n      fontSize:14\r\n  },\r\n  innput:{\r\n      height:40,\r\n      marginTop:20\r\n  },\r\n  logbutton:{\r\n      marginTop:10,\r\n      width:184,\r\n      height:40,\r\n\r\n  },\r\n  bulogin:{\r\n      fontSize:16,\r\n      fontFamily:\"Poppins-Bold\",\r\n      color:\"#FFFFFF\"\r\n  },\r\n  afterdabba:{\r\n      flexDirection:\"row\",\r\n      justifyContent:\"center\",\r\n      marginTop:20\r\n  },\r\n  newuserr:{\r\n      color:\"#1D2327\",\r\n      fontSize:10,\r\n\r\n  },\r\n  signup:{\r\n      color:'#007E59',\r\n      fontFamily:\"Poppins-Regular\",\r\n      fontSize:10\r\n  },\r\n  forgatepaas:{\r\n      marginTop:20,\r\n      justifyContent:'center',\r\n      alignItems:\"center\"\r\n  },\r\n  // fp:{\r\n  //      fontSize:15,\r\n  //      color:'#2F4858',\r\n  //      fontFamily:\"Poppins-Light\"\r\n  // },\r\n  eye:{\r\n    flexDirection:\"row\",\r\n \r\n     alignItems:\"center\",\r\n \r\n     borderWidth:.5,\r\n     borderColor:'#ADEEB4',\r\n     borderRadius:5,\r\n     \r\n },\r\n  textinputstyle:{\r\n      height:50,\r\n      borderWidth:.5,\r\n      borderColor:'#ADEEB4',\r\n      borderRadius:5,\r\n      paddingLeft:5,\r\n      \r\n  },\r\n  modell:{\r\n    width:\"5%\",\r\n\r\n    marginLeft:289,\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\",\r\n    backgroundColor:\"yellow\"\r\n  }\r\n  \r\n});\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}