{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\react_native\\\\Abhigyaan\\\\screens\\\\resetpassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Forgatt from \"../store/action/forgatepassword\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar Resetpassword = function Resetpassword(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredotp = _useState2[0],\n      setenteredotp = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      enteredpassword = _useState4[0],\n      setenteredpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enteredpasswordagain = _useState6[0],\n      setenteredpasswordagain = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      seterror = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isloadingm = _useState10[0],\n      setisloadingm = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isloading = _useState12[0],\n      setisloading = _useState12[1];\n\n  var student_id = useSelector(function (state) {\n    return state.Fog.student_id;\n  });\n  console.log(\"this is the recieved student id\" + student_id);\n\n  var otphandler = function otphandler(enteredText) {\n    setenteredotp(enteredText);\n  };\n\n  var passwordhandler = function passwordhandler(enteredText) {\n    setenteredpassword(enteredText);\n  };\n\n  var passwordhandleragain = function passwordhandleragain(enteredText) {\n    setenteredpasswordagain(enteredText);\n  };\n\n  var resetpass = function resetpass() {\n    return _regeneratorRuntime.async(function resetpass$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            seterror(null);\n            setisloadingm(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(Forgatt.resetforgating(student_id, enteredotp, enteredpassword, enteredpasswordagain)));\n\n          case 5:\n            console.log(\"changed successsfully\");\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            seterror(_context.t0.message);\n            setisloadingm(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  };\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert('An Error Occurred!', error, [{\n        text: 'Okay'\n      }]);\n    }\n  }, [error]);\n  return React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#016129', '#016129'],\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(ImageBackground, {\n    style: styles.backgroundimage,\n    source: require(\"../assets/drawable-xxxhdpi/background.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.dabba,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.urnam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"otp fillup\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"otp\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"otp\",\n    keyboardtype: \"default\",\n    onChangeText: otphandler,\n    value: enteredotp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 10\n    }\n  }, \"new_password\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"*********\",\n    keyboardtype: \"default\",\n    onChangeText: passwordhandler,\n    value: enteredpassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 20\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 18\n    }\n  }, \"Confirfpassword\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"*********\",\n    keyboardtype: \"default\",\n    onChangeText: passwordhandleragain,\n    value: enteredpasswordagain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: resetpass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 10\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#C53030', '#C53030'],\n    start: [.9, .0],\n    style: {\n      padding: 15,\n      alignItems: 'center',\n      borderRadius: 5,\n      width: 200,\n      marginLeft: 60,\n      marginTop: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }\n  }, isloadingm ? React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }) : React.createElement(Text, {\n    style: {\n      backgroundColor: 'transparent',\n      fontSize: 16,\n      color: '#fff',\n      fontFamily: \"Poppins-Bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"Submit\"))))));\n};\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  },\n  logo: {\n    backgroundColor: \"white\",\n    height: 72,\n    width: 72,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    marginTop: 90,\n    marginLeft: 158,\n    borderRadius: 40\n  },\n  image: {\n    width: 72,\n    height: 72,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: \"#F1F9FF\"\n  },\n  user: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  username: {\n    fontSize: 22,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#F1F9FF\"\n  },\n  backgroundimage: {\n    height: \"120%\"\n  },\n  dabba: {\n    backgroundColor: \"white\",\n    height: 400,\n    marginHorizontal: 20,\n    borderRadius: 5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    marginTop: 210,\n    paddingHorizontal: 15,\n    borderColor: \"#5EB668\",\n    borderWidth: .4\n  },\n  welcome: {\n    marginTop: 20,\n    color: '#1D2327',\n    fontSize: 18,\n    fontFamily: \"Poppins-Bold\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  urnam: {\n    fontFamily: \"Poppins-Regular\",\n    marginTop: 6,\n    color: '#1D2327',\n    fontSize: 14\n  },\n  innput: {\n    height: 40,\n    marginTop: 20\n  },\n  logbutton: {\n    marginTop: 10,\n    width: 184,\n    height: 40\n  },\n  bulogin: {\n    fontSize: 16,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#FFFFFF\"\n  },\n  afterdabba: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20\n  },\n  newuserr: {\n    color: \"#2F4858\",\n    fontSize: 10\n  },\n  signup: {\n    color: '#00AF50',\n    fontFamily: \"Poppins-Regular\",\n    fontSize: 10\n  },\n  forgatepaas: {\n    marginTop: 20,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  fp: {\n    fontSize: 15,\n    color: '#2F4858',\n    fontFamily: \"Poppins-Light\"\n  },\n  eye: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: .5,\n    borderColor: '#ADEEB4',\n    borderRadius: 5\n  },\n  textinputstyle: {\n    height: 57\n  },\n  Vieweye: {\n    borderWidth: .5,\n    borderColor: '#9AE6B4',\n    borderRadius: 5\n  }\n});\nexport default Resetpassword;","map":{"version":3,"sources":["D:/Projects/react_native/Abhigyaan/screens/resetpassword.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Forgatt","LinearGradient","Resetpassword","navigation","dispatch","enteredotp","setenteredotp","enteredpassword","setenteredpassword","enteredpasswordagain","setenteredpasswordagain","error","seterror","isloadingm","setisloadingm","isloading","setisloading","student_id","state","Fog","console","log","otphandler","enteredText","passwordhandler","passwordhandleragain","resetpass","resetforgating","message","Alert","alert","text","styles","main","position","left","right","top","height","backgroundimage","require","dabba","urnam","Vieweye","textinputstyle","padding","alignItems","borderRadius","width","marginLeft","marginTop","backgroundColor","fontSize","color","fontFamily","StyleSheet","create","flex","logo","justifyContent","image","borderWidth","borderColor","user","username","marginHorizontal","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","paddingHorizontal","welcome","innput","logbutton","bulogin","afterdabba","flexDirection","newuserr","signup","forgatepaas","fp","eye"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Text,View,StyleSheet,\r\n    TextInput,Button, \r\n    Alert,\r\n    ActivityIndicator,\r\n    TouchableOpacity,\r\n    ImageBackground\r\n} from 'react-native';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport * as Forgatt from '../store/action/forgatepassword';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst Resetpassword=({navigation})=>{\r\n\r\n    const dispatch=useDispatch()\r\n    const [enteredotp,setenteredotp]=useState(\"\");\r\n    const [enteredpassword,setenteredpassword]=useState(\"\");\r\n    const [enteredpasswordagain,setenteredpasswordagain]=useState(\"\");\r\n    const [error,seterror]=useState();\r\n    const [isloadingm,setisloadingm]=useState(false)\r\n    const [isloading,setisloading]=useState(false)\r\n    const student_id=useSelector(state=>state.Fog.student_id)\r\n    console.log( \"this is the recieved student id\"+ student_id)\r\n    const otphandler=(enteredText)=>{\r\n        setenteredotp(enteredText)\r\n    }\r\n    const passwordhandler=(enteredText)=>{\r\n        setenteredpassword(enteredText)\r\n    }\r\n    const passwordhandleragain=(enteredText)=>{\r\n        setenteredpasswordagain(enteredText)\r\n    }\r\n    const resetpass= async()=>{\r\n        seterror(null)\r\n        setisloadingm(true)\r\n        try{\r\n          await dispatch(Forgatt.resetforgating(student_id,enteredotp,enteredpassword,enteredpasswordagain))\r\n          console.log(\"changed successsfully\")\r\n       \r\n        }catch(error){\r\n          seterror(error.message)\r\n            setisloadingm(false) \r\n        }\r\n      }  \r\n      useEffect(() => {\r\n        \r\n        if (error) {\r\n          Alert.alert('An Error Occurred!', error, [{ text: 'Okay' }]);\r\n        }\r\n\r\n      }, [error]);\r\n    return(\r\n        // <View style={styles.main}>\r\n        //     <Text>otp</Text>\r\n        //        <TextInput \r\n        //       style={styles.textinputstyle}\r\n        //        placeholder=\"otp\"\r\n        //         keyboardtype=\"default\"\r\n                \r\n        //         onChangeText={otphandler}\r\n        //         value={enteredotp}\r\n        //         />\r\n        //         <Text>new_password</Text>\r\n        //           <TextInput \r\n        //       style={styles.textinputstyle}\r\n        //        placeholder=\"*********\"\r\n        //         keyboardtype=\"default\"\r\n                \r\n        //         onChangeText={passwordhandler}\r\n        //         value={enteredpassword}\r\n        //         />\r\n        //         <Text>Confirfpassword</Text>\r\n        //         <TextInput \r\n        //       style={styles.textinputstyle}\r\n        //        placeholder=\"*********\"\r\n        //         keyboardtype=\"default\"\r\n                \r\n        //         onChangeText={passwordhandleragain}\r\n        //         value={enteredpasswordagain}\r\n        //         />\r\n        //         {\r\n        //             isloadingm?<ActivityIndicator/>:\r\n                \r\n        //         <Button onPress={resetpass} title=\"submit\"/>\r\n        //       }\r\n        // </View>\r\n\r\n       \r\n        <View style={styles.main}>\r\n            \r\n        <LinearGradient\r\n       // Background Linear Gradient\r\n           colors={['#016129', '#016129']}\r\n        //    start={[.9,.0]}\r\n            style={{\r\n               position: 'absolute',\r\n              left: 0,\r\n                 right: 0,\r\n                top: 0,\r\n              height:\"100%\",\r\n              \r\n              }}\r\n             />\r\n        <ImageBackground  style={styles.backgroundimage} source={require(\"../assets/drawable-xxxhdpi/background.png\")}>\r\n  \r\n       <View style={styles.dabba}>\r\n        \r\n          <Text style={styles.urnam}>otp fillup</Text>\r\n         \r\n          <Text>otp</Text> \r\n          <View style={styles.Vieweye}>\r\n                <TextInput \r\n               style={styles.textinputstyle}\r\n                placeholder=\"otp\"\r\n                 keyboardtype=\"default\"\r\n                \r\n                 onChangeText={otphandler}\r\n                 value={enteredotp}\r\n         /></View>\r\n         <Text>new_password</Text>\r\n         <View style={styles.Vieweye}>\r\n                   <TextInput \r\n              style={styles.textinputstyle}\r\n                placeholder=\"*********\"\r\n                 keyboardtype=\"default\"\r\n                \r\n                 onChangeText={passwordhandler}\r\n                 value={enteredpassword}\r\n                 /></View>\r\n                 <Text>Confirfpassword</Text>\r\n                 <View style={styles.Vieweye}>\r\n                 <TextInput \r\n               style={styles.textinputstyle}\r\n                placeholder=\"*********\"\r\n                 keyboardtype=\"default\"\r\n                \r\n                 onChangeText={passwordhandleragain}\r\n                 value={enteredpasswordagain}\r\n               />\r\n              \r\n           </View>\r\n           \r\n         <TouchableOpacity\r\n         onPress={resetpass}\r\n         >\r\n         <LinearGradient\r\n      // Button Linear Gradient\r\n     \r\n      colors={['#C53030', '#C53030']}\r\n      start={[.9,.0]}\r\n      style={{ padding: 15,\r\n       alignItems: 'center',\r\n        borderRadius: 5,\r\n        width:200,\r\n    \r\n        marginLeft:60,\r\n        marginTop:25 }}>\r\n          {isloadingm?<ActivityIndicator/>:\r\n      <Text\r\n        style={{\r\n          backgroundColor: 'transparent',\r\n          fontSize: 16,\r\n          color: '#fff',\r\n          fontFamily:\"Poppins-Bold\"\r\n        }}>\r\n      Submit\r\n      </Text>}\r\n    </LinearGradient>\r\n</TouchableOpacity>\r\n     </View>\r\n    </ImageBackground>\r\n    </View>\r\n\r\n\r\n\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n  main:{\r\n    flex:1,\r\n   // backgroundColor:\"green\"\r\n},\r\nlogo:{\r\n    backgroundColor:\"white\",\r\n    height:72,\r\n    width:72,\r\n    justifyContent:\"center\",\r\n    alignItems:'center',\r\n    marginTop:90,\r\n   marginLeft:158,\r\n   borderRadius:40,\r\n  \r\n    \r\n},\r\nimage:{\r\n    width:72,\r\n    height:72,\r\n    borderRadius:40,\r\n    borderWidth:3,\r\n    borderColor:\"#F1F9FF\"\r\n},\r\nuser:{\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\",\r\n    marginTop:10\r\n},\r\nusername:{\r\n    fontSize:22,\r\n    fontFamily:\"Poppins-Bold\",\r\n    color:\"#F1F9FF\"\r\n},\r\nbackgroundimage:{\r\nheight:\"120%\"\r\n},\r\ndabba:{\r\n    backgroundColor:\"white\",\r\n    height:400,\r\n    marginHorizontal:20,\r\n    borderRadius:5,\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.26,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    elevation: 5,\r\n    marginTop:210,\r\n    paddingHorizontal:15,\r\n    borderColor:\"#5EB668\",\r\n    borderWidth:.4\r\n},\r\nwelcome:{\r\n    marginTop:20,\r\n    color:'#1D2327',\r\n    fontSize:18,\r\n    fontFamily:\"Poppins-Bold\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n},\r\nurnam:{\r\n    fontFamily:\"Poppins-Regular\",\r\n  marginTop:6,\r\n    color:'#1D2327',\r\n    fontSize:14\r\n},\r\ninnput:{\r\n    height:40,\r\n    marginTop:20\r\n},\r\nlogbutton:{\r\n    marginTop:10,\r\n    width:184,\r\n    height:40,\r\n\r\n},\r\nbulogin:{\r\n    fontSize:16,\r\n    fontFamily:\"Poppins-Bold\",\r\n    color:\"#FFFFFF\"\r\n},\r\nafterdabba:{\r\n    flexDirection:\"row\",\r\n    justifyContent:\"center\",\r\n    marginTop:20\r\n},\r\nnewuserr:{\r\n    color:\"#2F4858\",\r\n    fontSize:10,\r\n\r\n},\r\nsignup:{\r\n    color:'#00AF50',\r\n    fontFamily:\"Poppins-Regular\",\r\n    fontSize:10\r\n},\r\nforgatepaas:{\r\n    marginTop:20,\r\n    justifyContent:'center',\r\n    alignItems:\"center\"\r\n},\r\nfp:{\r\n     fontSize:15,\r\n     color:'#2F4858',\r\n     fontFamily:\"Poppins-Light\"\r\n},\r\neye:{\r\n  flexDirection:\"row\",\r\n\r\n   alignItems:\"center\",\r\n\r\n   borderWidth:.5,\r\n   borderColor:'#ADEEB4',\r\n   borderRadius:5,\r\n   \r\n},\r\ntextinputstyle:{\r\n    height:57,\r\n    \r\n},\r\nVieweye:{\r\n  borderWidth:.5,\r\n  borderColor:'#9AE6B4',\r\n  borderRadius:5,\r\n}\r\n});\r\nexport default Resetpassword;"]},"metadata":{},"sourceType":"module"}