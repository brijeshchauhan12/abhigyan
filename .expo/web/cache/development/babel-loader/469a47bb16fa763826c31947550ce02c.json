{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var TOPICARRAY = 'TOPICARRAY';\nexport var topichandle = function topichandle(data) {\n  return {\n    type: TOPICARRAY,\n    topics: data\n  };\n};\nexport var topicandvideo = function topicandvideo(subject_id) {\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata, dataa;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            details = {\n              subject_id: subject_id\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/topic_with_videos', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.status != 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"there may be some entries missing\");\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context.sent;\n            dataa = resdata.data;\n            dispatch(topichandle(dataa));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/store/action/topicandvideo.js"],"names":["TOPICARRAY","topichandle","data","type","topics","topicandvideo","subject_id","dispatch","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","status","Error","json","resdata","dataa"],"mappings":";AACA,OAAO,IAAMA,UAAU,GAAC,YAAjB;AACP,OAAO,IAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,IAAD,EAAQ;AAC7B,SAAM;AAACC,IAAAA,IAAI,EAACH,UAAN;AAAiBI,IAAAA,MAAM,EAACF;AAAxB,GAAN;AACH,CAFM;AAGP,OAAO,IAAMG,aAAa,GAAC,SAAdA,aAAc,CAACC,UAAD,EAAc;AACrC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,OADD,GACW;AACVF,cAAAA,UAAU,EAACA;AADD,aADX;AAKCG,YAAAA,QALD,GAKY,EALZ;;AAMH,iBAASC,QAAT,IAAqBF,OAArB,EAA8B;AACtBG,cAAAA,UADsB,GACTC,kBAAkB,CAACF,QAAD,CADT;AAEtBG,cAAAA,YAFsB,GAEPD,kBAAkB,CAACJ,OAAO,CAACE,QAAD,CAAR,CAFX;AAG1BD,cAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACH;;AACDJ,YAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AAXG;AAAA,6CAakBC,KAAK,CAAC,gDAAD,EAAmD;AACzEC,cAAAA,MAAM,EAAE,MADiE;AAEzEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFgE;AAKzEC,cAAAA,IAAI,EAAEV;AALmE,aAAnD,CAbvB;;AAAA;AAaGW,YAAAA,QAbH;;AAAA,kBAoBAA,QAAQ,CAACC,MAAT,IAAiB,GApBjB;AAAA;AAAA;AAAA;;AAAA,kBAqBO,IAAIC,KAAJ,CAAU,mCAAV,CArBP;;AAAA;AAAA;AAAA,6CAuBiBF,QAAQ,CAACG,IAAT,EAvBjB;;AAAA;AAuBGC,YAAAA,OAvBH;AAwBGC,YAAAA,KAxBH,GAwBSD,OAAO,CAACtB,IAxBjB;AA0BHK,YAAAA,QAAQ,CAACN,WAAW,CAACwB,KAAD,CAAZ,CAAR;;AA1BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA4BH,CA7BM","sourcesContent":["\nexport const TOPICARRAY='TOPICARRAY';\nexport const topichandle=(data)=>{\n    return{type:TOPICARRAY,topics:data}\n}\nexport const topicandvideo=(subject_id)=>{\n    return async dispatch=>{\n        let details = {\n            subject_id:subject_id\n        };\n\n        let formBody = [];\n        for (let property in details) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        const response=await fetch('http://ais.omsai.info/api/v1/topic_with_videos', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n        })\n        if(response.status!=200){\n            throw new Error(\"there may be some entries missing\")\n        }\n        const resdata=await response.json();\n        const dataa=resdata.data\n        // console.log(dataa)\n        dispatch(topichandle(dataa))\n    }\n}"]},"metadata":{},"sourceType":"module"}