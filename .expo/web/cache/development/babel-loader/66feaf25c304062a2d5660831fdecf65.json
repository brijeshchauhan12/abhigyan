{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/brijesh/Desktop/Abhigyaan-main/screens/Notifications.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport TopHeader from \"../components/topheader\";\nexport default Notifications = function Notifications(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notification = _useState4[0],\n      setNotification = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var user = useSelector(function (state) {\n    return state.Auth.userdata;\n  });\n\n  var getNotifications = function getNotifications() {\n    setLoading(null);\n    setError(null);\n    var details = {\n      student_id: user.st_id\n    };\n    var formBody = [];\n\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    fetch('http://ais.omsai.info/api/v1/notification_list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formBody\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.status != 200) {\n        setError(JSON.stringify(res.message));\n      } else {\n        setNotification(res.data);\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      setError(err.message);\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    if (notification.length == 0) {\n      getNotifications();\n    }\n  }, [notification]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(TopHeader, {\n    page: \"tab\",\n    title: \"Notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), loading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }) : React.createElement(FlatList, {\n    style: styles.root,\n    data: notification,\n    extraData: selectedId,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(View, {\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(item) {\n      var Notification = item.item;\n      var attachment = React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }\n      });\n      var mainContentStyle;\n\n      if (Notification.attachment) {\n        mainContentStyle = styles.mainContent;\n        attachment = React.createElement(Image, {\n          style: styles.attachment,\n          source: {\n            uri: Notification.attachment\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 28\n          }\n        });\n      }\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelectedId(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/notification.png\"),\n        style: styles.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }), React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: mainContentStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, Notification.title), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, Notification.body)), React.createElement(Text, {\n        style: styles.timeAgo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, \"2 hours ago\")), attachment)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  container: {\n    padding: 16,\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderColor: \"#FFFFFF\",\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  text: {\n    marginBottom: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  content: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 0\n  },\n  mainContent: {\n    marginRight: 60\n  },\n  img: {\n    height: 50,\n    width: 50,\n    margin: 0\n  },\n  attachment: {\n    position: 'absolute',\n    right: 0,\n    height: 50,\n    width: 50\n  },\n  separator: {\n    height: 1,\n    backgroundColor: \"#CCCCCC\"\n  },\n  timeAgo: {\n    fontSize: 12,\n    color: \"#696969\"\n  },\n  name: {\n    fontSize: 16,\n    color: \"#1E90FF\"\n  }\n});","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/screens/Notifications.js"],"names":["React","useEffect","useState","useSelector","useDispatch","TopHeader","Notifications","route","navigation","selectedId","setSelectedId","notification","setNotification","loading","setLoading","error","setError","user","state","Auth","userdata","getNotifications","details","student_id","st_id","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","then","res","json","status","JSON","stringify","message","data","catch","err","length","styles","root","separator","item","id","toString","Notification","attachment","mainContentStyle","mainContent","uri","container","require","avatar","content","text","name","title","timeAgo","StyleSheet","create","backgroundColor","padding","flexDirection","borderBottomWidth","borderColor","alignItems","width","height","borderRadius","marginBottom","flexWrap","flex","marginLeft","marginRight","img","margin","position","right","fontSize","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAUA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,SAAP;AAEA,eAAeC,aAAa,GAAC,6BAAsB;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACbN,QAAQ,CAAC,IAAD,CADK;AAAA;AAAA,MAC1CO,UAD0C;AAAA,MAC9BC,aAD8B;;AAAA,mBAETR,QAAQ,CAAC,EAAD,CAFC;AAAA;AAAA,MAE1CS,YAF0C;AAAA,MAE5BC,eAF4B;;AAAA,mBAGnBV,QAAQ,CAAC,KAAD,CAHW;AAAA;AAAA,MAG1CW,OAH0C;AAAA,MAGjCC,UAHiC;;AAAA,mBAIvBZ,QAAQ,CAAC,IAAD,CAJe;AAAA;AAAA,MAI1Ca,KAJ0C;AAAA,MAInCC,QAJmC;;AAKjD,MAAMC,IAAI,GAAGd,WAAW,CAAC,UAAAe,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAf;AAAA,GAAN,CAAxB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAK;AAC5BP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,QAAIM,OAAO,GAAG;AACZC,MAAAA,UAAU,EAAEN,IAAI,CAACO;AADL,KAAd;AAIA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,QAAT,IAAqBJ,OAArB,EAA8B;AAC1B,UAAIK,UAAU,GAAGC,kBAAkB,CAACF,QAAD,CAAnC;AACA,UAAIG,YAAY,GAAGD,kBAAkB,CAACN,OAAO,CAACI,QAAD,CAAR,CAArC;AACAD,MAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACH;;AACDJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AACAC,IAAAA,KAAK,CAAC,gDAAD,EAAmD;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuC;AAKhDC,MAAAA,IAAI,EAAEV;AAL0C,KAAnD,CAAL,CAMKW,IANL,CAMU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KANb,EAM6BF,IAN7B,CAMkC,UAAAC,GAAG,EAAI;AACrC,UAAGA,GAAG,CAACE,MAAJ,IAAc,GAAjB,EAAqB;AACnBvB,QAAAA,QAAQ,CAACwB,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,OAAnB,CAAD,CAAR;AACD,OAFD,MAEK;AACH9B,QAAAA,eAAe,CAACyB,GAAG,CAACM,IAAL,CAAf;AACD;;AACD7B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbH,EAaK8B,KAbL,CAaW,UAAAC,GAAG,EAAE;AACZ7B,MAAAA,QAAQ,CAAC6B,GAAG,CAACH,OAAL,CAAR;AACA5B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAhBH;AAiBD,GA/BD;;AAiCAb,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGU,YAAY,CAACmC,MAAb,IAAuB,CAA1B,EAA4B;AAC1BzB,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIP,CAACV,YAAD,CAJO,CAAT;AAME,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEGE,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGR,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEkC,MAAM,CAACC,IADhB;AAEE,IAAA,IAAI,EAAErC,YAFR;AAGE,IAAA,SAAS,EAAEF,UAHb;AAIE,IAAA,sBAAsB,EAAE,kCAAM;AAC5B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEsC,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KARH;AASE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAQ;AACpB,aAAOA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAP;AACD,KAXH;AAYE,IAAA,UAAU,EAAE,oBAACF,IAAD,EAAU;AACpB,UAAMG,YAAY,GAAGH,IAAI,CAACA,IAA1B;AACA,UAAII,UAAU,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AAEA,UAAIC,gBAAJ;;AACA,UAAGF,YAAY,CAACC,UAAhB,EAA4B;AAC1BC,QAAAA,gBAAgB,GAAGR,MAAM,CAACS,WAA1B;AACAF,QAAAA,UAAU,GAAG,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAEP,MAAM,CAACO,UAArB;AAAiC,UAAA,MAAM,EAAE;AAACG,YAAAA,GAAG,EAACJ,YAAY,CAACC;AAAlB,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACD;;AACD,aACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM5C,aAAa,CAACwC,IAAI,CAACC,EAAN,CAAnB;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,8BAAtB;AAAsD,QAAA,KAAK,EAAEZ,MAAM,CAACa,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BV,YAAY,CAACW,KAAxC,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOX,YAAY,CAAClB,IAApB,CAFF,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACkB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF,EAUGX,UAVH,CAFF,CADF,CADF;AAmBD,KAxCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAkDH,CAhGD;AAkGA,IAAMP,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/BnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,eAAe,EAAE;AADb,GADyB;AAI/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,OAAO,EAAE,EADA;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,iBAAiB,EAAE,CAHV;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,UAAU,EAAE;AALH,GAJoB;AAW/Bb,EAAAA,MAAM,EAAE;AACNc,IAAAA,KAAK,EAAC,EADA;AAENC,IAAAA,MAAM,EAAC,EAFD;AAGNC,IAAAA,YAAY,EAAC;AAHP,GAXuB;AAgB/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,YAAY,EAAE,CADV;AAEJP,IAAAA,aAAa,EAAE,KAFX;AAGJQ,IAAAA,QAAQ,EAAC;AAHL,GAhByB;AAqB/BjB,EAAAA,OAAO,EAAE;AACPkB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAE;AAHN,GArBsB;AA0B/BzB,EAAAA,WAAW,EAAE;AACXyB,IAAAA,WAAW,EAAE;AADF,GA1BkB;AA6B/BC,EAAAA,GAAG,EAAE;AACHP,IAAAA,MAAM,EAAE,EADL;AAEHD,IAAAA,KAAK,EAAE,EAFJ;AAGHS,IAAAA,MAAM,EAAE;AAHL,GA7B0B;AAkC/B7B,EAAAA,UAAU,EAAE;AACV8B,IAAAA,QAAQ,EAAE,UADA;AAEVC,IAAAA,KAAK,EAAE,CAFG;AAGVV,IAAAA,MAAM,EAAE,EAHE;AAIVD,IAAAA,KAAK,EAAE;AAJG,GAlCmB;AAwC/BzB,EAAAA,SAAS,EAAE;AACT0B,IAAAA,MAAM,EAAE,CADC;AAETP,IAAAA,eAAe,EAAE;AAFR,GAxCoB;AA4C/BH,EAAAA,OAAO,EAAC;AACNqB,IAAAA,QAAQ,EAAC,EADH;AAENC,IAAAA,KAAK,EAAC;AAFA,GA5CuB;AAgD/BxB,EAAAA,IAAI,EAAC;AACHuB,IAAAA,QAAQ,EAAC,EADN;AAEHC,IAAAA,KAAK,EAAC;AAFH;AAhD0B,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  FlatList,\n  ActivityIndicator\n} from 'react-native';\nimport {useSelector,useDispatch} from 'react-redux';\nimport TopHeader from '../components/topheader';\n\nexport default Notifications=({route,navigation})=>{\n  const [selectedId, setSelectedId] = useState(null);\n  const [notification, setNotification] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const user = useSelector(state => state.Auth.userdata);\n\n  const getNotifications = () =>{\n    setLoading(null)\n    setError(null)\n    let details = {\n      student_id: user.st_id\n    }\n\n    let formBody = [];\n    for (let property in details) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    fetch('http://ais.omsai.info/api/v1/notification_list', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n      }).then(res => res.json()).then(res => {\n        if(res.status != 200){\n          setError(JSON.stringify(res.message))\n        }else{\n          setNotification(res.data)\n        }\n        setLoading(false)\n      }).catch(err=>{\n        setError(err.message)\n        setLoading(false)\n      })\n  }\n\n  useEffect(()=>{\n    if(notification.length == 0){\n      getNotifications()\n    }\n  },[notification])\n\n    return (\n      <View>\n      <TopHeader page=\"tab\" title=\"Notifications\"/>\n        {loading ?\n          <ActivityIndicator size=\"large\" />\n          :\n        <FlatList\n          style={styles.root}\n          data={notification}\n          extraData={selectedId}\n          ItemSeparatorComponent={() => {\n            return (\n              <View style={styles.separator}/>\n            )\n          }}\n          keyExtractor={(item)=>{\n            return item.id.toString();\n          }}\n          renderItem={(item) => {\n            const Notification = item.item;\n            let attachment = <View/>;\n\n            let mainContentStyle;\n            if(Notification.attachment) {\n              mainContentStyle = styles.mainContent;\n              attachment = <Image style={styles.attachment} source={{uri:Notification.attachment}}/>\n            }\n            return(\n              <TouchableOpacity onPress={() => setSelectedId(item.id)}>\n                <View style={styles.container}>\n                  <Image source={require('../assets/notification.png')} style={styles.avatar}/>\n                  <View style={styles.content}>\n                    <View style={mainContentStyle}>\n                      <View style={styles.text}>\n                        <Text style={styles.name}>{Notification.title}</Text>\n                        <Text>{Notification.body}</Text>\n                      </View>\n                      <Text style={styles.timeAgo}>\n                        2 hours ago\n                      </Text>\n                    </View>\n                    {attachment}\n                  </View>\n                </View>\n              </TouchableOpacity>\n            );\n          }}/>\n        }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  container: {\n    padding: 16,\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderColor: \"#FFFFFF\",\n    alignItems: 'flex-start'\n  },\n  avatar: {\n    width:50,\n    height:50,\n    borderRadius:25,\n  },\n  text: {\n    marginBottom: 5,\n    flexDirection: 'row',\n    flexWrap:'wrap'\n  },\n  content: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 0\n  },\n  mainContent: {\n    marginRight: 60\n  },\n  img: {\n    height: 50,\n    width: 50,\n    margin: 0\n  },\n  attachment: {\n    position: 'absolute',\n    right: 0,\n    height: 50,\n    width: 50\n  },\n  separator: {\n    height: 1,\n    backgroundColor: \"#CCCCCC\"\n  },\n  timeAgo:{\n    fontSize:12,\n    color:\"#696969\"\n  },\n  name:{\n    fontSize:16,\n    color:\"#1E90FF\"\n  }\n}); "]},"metadata":{},"sourceType":"module"}