{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var SUBJECTLIST = 'SUBJECTLIST';\nexport var CLASSID = 'CLASSID';\nexport var CLASSARRAY = 'CLASSARRAY';\nexport var classlist = function classlist(data) {\n  return {\n    type: CLASSARRAY,\n    classar: data\n  };\n};\nexport var classidsend = function classidsend(data) {\n  return {\n    type: CLASSID,\n    class_id: data\n  };\n};\nexport var allsubjectlist = function allsubjectlist(data) {\n  return {\n    type: SUBJECTLIST,\n    dataarray: data\n  };\n};\nexport var subject_list = function subject_list(school_id, user) {\n  var classid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata, dar;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            details = {\n              school_id: school_id,\n              board_id: user.br_id,\n              class_id: classid,\n              student_id: user.st_id\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/subject_list', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.status != 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"there may be some entries missing\");\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context.sent;\n            dar = resdata.data;\n            dispatch(allsubjectlist(dar));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var classlistALL = function classlistALL(school_id, user) {\n  return function _callee2(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata, classarray;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = {\n              school_id: school_id,\n              board_id: user.br_id\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/class_list', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context2.sent;\n\n            if (!(response.status != 200)) {\n              _context2.next = 9;\n              break;\n            }\n\n            throw new Error(\"there may be some entries missing\");\n\n          case 9:\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context2.sent;\n            classarray = resdata.data;\n            dispatch(classlist(classarray));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/store/action/subjectlist.js"],"names":["SUBJECTLIST","CLASSID","CLASSARRAY","classlist","data","type","classar","classidsend","class_id","allsubjectlist","dataarray","subject_list","school_id","user","classid","dispatch","details","board_id","br_id","student_id","st_id","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","status","Error","json","resdata","dar","classlistALL","classarray"],"mappings":"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","sourcesContent":["import {AsyncStorage} from 'react-native';\nexport const SUBJECTLIST='SUBJECTLIST';\nexport const CLASSID='CLASSID';\nexport const CLASSARRAY='CLASSARRAY';\nexport const classlist=(data)=>{\n    return{type:CLASSARRAY,classar:data}\n}\nexport const classidsend=(data)=>{\n    return{type:CLASSID,class_id:data}\n}\nexport const allsubjectlist=(data)=>{\n    return {type:SUBJECTLIST,dataarray:data}\n}\n\nexport const subject_list=(school_id,user,classid=\"\")=>{\n    \n    return async dispatch=>{\n        let details = {\n            school_id:school_id,\n            board_id:user.br_id,\n            class_id: classid,\n            student_id: user.st_id\n        };\n\n        let formBody = [];\n        for (let property in details) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        const response=await fetch('http://ais.omsai.info/api/v1/subject_list', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n        })\n        if(response.status!=200){\n            throw new Error(\"there may be some entries missing\")\n        }\n        const resdata=await response.json();\n        const dar =resdata.data\n        dispatch(allsubjectlist(dar))\n    }\n}\n\nexport const classlistALL=(school_id, user)=>{\n    return async dispatch=>{\n      let details = {\n            school_id:school_id,\n            board_id:user.br_id\n        };\n\n        let formBody = [];\n        for (let property in details) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n\n        const response=await fetch('http://ais.omsai.info/api/v1/class_list', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n        })\n        if(response.status!=200){\n            throw new Error(\"there may be some entries missing\")\n        }\n        const resdata=await response.json();\n        const classarray=resdata.data\n        dispatch(classlist(classarray))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}