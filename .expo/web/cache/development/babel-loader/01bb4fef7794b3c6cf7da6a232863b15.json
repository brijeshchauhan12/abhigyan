{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var profileupdateofstudent = function profileupdateofstudent(student_id, student_name, student_email, father_name, mother_name, dob, gender, address) {\n  return function _callee(dispatch) {\n    var details, formBody, property, encodedKey, encodedValue, response, resdata;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            details = {\n              student_id: student_id,\n              student_name: student_name,\n              student_email: student_email,\n              father_name: father_name,\n              mother_name: mother_name,\n              dob: dob,\n              gender: gender,\n              address: address\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch('http://ais.omsai.info/api/v1/profile_update', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (!(response.status != 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"there may be some entries missing\");\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resdata = _context.sent;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/store/action/profileupdate.js"],"names":["profileupdateofstudent","student_id","student_name","student_email","father_name","mother_name","dob","gender","address","dispatch","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","response","status","Error","json","resdata"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAC,SAAvBA,sBAAuB,CAACC,UAAD,EAAYC,YAAZ,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,WAAnD,EAA+DC,GAA/D,EAAmEC,MAAnE,EAA0EC,OAA1E,EAAoF;AAEpH,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,YAAAA,OAFC,GAES;AACZT,cAAAA,UAAU,EAACA,UADC;AAEZC,cAAAA,YAAY,EAACA,YAFD;AAGZC,cAAAA,aAAa,EAACA,aAHF;AAIZC,cAAAA,WAAW,EAACA,WAJA;AAKZC,cAAAA,WAAW,EAACA,WALA;AAMZC,cAAAA,GAAG,EAACA,GANQ;AAOZC,cAAAA,MAAM,EAACA,MAPK;AAQZC,cAAAA,OAAO,EAACA;AARI,aAFT;AAaHG,YAAAA,QAbG,GAaQ,EAbR;;AAcP,iBAASC,QAAT,IAAqBF,OAArB,EAA8B;AACtBG,cAAAA,UADsB,GACTC,kBAAkB,CAACF,QAAD,CADT;AAEtBG,cAAAA,YAFsB,GAEPD,kBAAkB,CAACJ,OAAO,CAACE,QAAD,CAAR,CAFX;AAG1BD,cAAAA,QAAQ,CAACK,IAAT,CAAcH,UAAU,GAAG,GAAb,GAAmBE,YAAjC;AACH;;AACDJ,YAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AAnBO;AAAA,6CAqBaC,KAAK,CAAC,6CAAD,EAAgD;AACrEC,cAAAA,MAAM,EAAE,MAD6D;AAErEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAF4D;AAKrEC,cAAAA,IAAI,EAAEV;AAL+D,aAAhD,CArBlB;;AAAA;AAqBFW,YAAAA,QArBE;;AAAA,kBA4BJA,QAAQ,CAACC,MAAT,IAAiB,GA5Bb;AAAA;AAAA;AAAA;;AAAA,kBA6BG,IAAIC,KAAJ,CAAU,mCAAV,CA7BH;;AAAA;AAAA;AAAA,6CA+BaF,QAAQ,CAACG,IAAT,EA/Bb;;AAAA;AA+BDC,YAAAA,OA/BC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAkCH,CApCM","sourcesContent":["export const profileupdateofstudent=(student_id,student_name,student_email,father_name,mother_name,dob,gender,address)=>{\n    \n    return async dispatch=>{\n\n      let details = {\n        student_id:student_id,\n        student_name:student_name,\n        student_email:student_email,\n        father_name:father_name,\n        mother_name:mother_name,\n        dob:dob,\n        gender:gender,\n        address:address\n    }\n\n    let formBody = [];\n    for (let property in details) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n   const response=await fetch('http://ais.omsai.info/api/v1/profile_update', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: formBody\n    })\n    if(response.status!=200){\n        throw new Error(\"there may be some entries missing\")\n    }\n    const resdata=await response.json();\n    \n    }\n}"]},"metadata":{},"sourceType":"module"}