{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/brijesh/Desktop/Abhigyaan-main/screens/resetpassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Forgatt from \"../store/action/forgatepassword\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar Resetpassword = function Resetpassword(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredotp = _useState2[0],\n      setenteredotp = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      enteredpassword = _useState4[0],\n      setenteredpassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enteredpasswordagain = _useState6[0],\n      setenteredpasswordagain = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      seterror = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isloadingm = _useState10[0],\n      setisloadingm = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      otpErr = _useState12[0],\n      setOtpErr = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passErr = _useState14[0],\n      setPassErr = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cnfPassErr = _useState16[0],\n      setCnfPassErr = _useState16[1];\n\n  var student_id = useSelector(function (state) {\n    return state.Fog.student_id;\n  });\n\n  var otphandler = function otphandler(enteredText) {\n    setenteredotp(enteredText);\n  };\n\n  var passwordhandler = function passwordhandler(enteredText) {\n    setenteredpassword(enteredText);\n  };\n\n  var passwordhandleragain = function passwordhandleragain(enteredText) {\n    setenteredpasswordagain(enteredText);\n  };\n\n  var resetpass = function resetpass() {\n    var details, formBody, property, encodedKey, encodedValue;\n    return _regeneratorRuntime.async(function resetpass$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            seterror(null);\n            setisloadingm(true);\n\n            if (enteredotp == \"\") {\n              setOtpErr(true);\n            } else {\n              setOtpErr(false);\n            }\n\n            if (enteredpassword == \"\") {\n              setPassErr(true);\n            } else {\n              setPassErr(false);\n            }\n\n            if (enteredpasswordagain == \"\") {\n              setCnfPassErr(true);\n            } else {\n              setCnfPassErr(false);\n            }\n\n            if (!(otpErr || passErr || cnfPassErr)) {\n              _context.next = 8;\n              break;\n            }\n\n            setisloadingm(false);\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            details = {\n              student_id: student_id,\n              otp: enteredotp,\n              new_password: enteredpassword,\n              confirm_password: enteredpasswordagain\n            };\n            formBody = [];\n\n            for (property in details) {\n              encodedKey = encodeURIComponent(property);\n              encodedValue = encodeURIComponent(details[property]);\n              formBody.push(encodedKey + \"=\" + encodedValue);\n            }\n\n            formBody = formBody.join(\"&\");\n            fetch('http://ais.omsai.info/api/v1/reset_password', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              body: formBody\n            }).then(function (res) {\n              return res.json();\n            }).then(function (res) {\n              if (res.status != 200) {\n                seterror(JSON.stringify(res.message));\n              } else {\n                Alert.alert(\"Success\", res.message, [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return navigation.navigate(\"Login\");\n                  }\n                }]);\n              }\n\n              setisloadingm(false);\n            }).catch(function (err) {\n              seterror(err.message);\n              setisloadingm(false);\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert('An Error Occurred!', error, [{\n        text: 'Okay'\n      }]);\n    }\n  }, [error]);\n  return React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#016129', '#016129'],\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(ImageBackground, {\n    style: styles.backgroundimage,\n    source: require(\"../assets/drawable-xxxhdpi/background.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.dabba,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.urnam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Reset password\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Otp\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"Otp\",\n    keyboardType: 'numeric',\n    onChangeText: otphandler,\n    value: enteredotp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), otpErr == true ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"* OTP is required.\") : null, React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"New password\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"New password\",\n    onChangeText: passwordhandler,\n    value: enteredpassword,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })), passErr == true ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"* Password is required.\") : null, React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Confirm New Password\"), React.createElement(View, {\n    style: styles.Vieweye,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinputstyle,\n    placeholder: \"Confirm New Password\",\n    onChangeText: passwordhandleragain,\n    value: enteredpasswordagain,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  })), cnfPassErr == true ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"* Confirm password is required.\") : null, React.createElement(TouchableOpacity, {\n    onPress: resetpass,\n    style: {\n      position: 'relative',\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#C53030', '#C53030'],\n    start: [.9, .0],\n    style: {\n      padding: 7,\n      alignItems: 'center',\n      borderRadius: 5,\n      width: 150,\n      marginTop: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, isloadingm ? React.createElement(ActivityIndicator, {\n    color: \"#ffffff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }\n  }) : React.createElement(Text, {\n    style: {\n      backgroundColor: 'transparent',\n      fontSize: 16,\n      color: '#fff',\n      fontFamily: \"Poppins-Bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  },\n  logo: {\n    backgroundColor: \"white\",\n    height: 72,\n    width: 72,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    marginTop: 90,\n    marginLeft: 158,\n    borderRadius: 40\n  },\n  image: {\n    width: 72,\n    height: 72,\n    borderRadius: 40,\n    borderWidth: 3,\n    borderColor: \"#F1F9FF\"\n  },\n  user: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  username: {\n    fontSize: 22,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#F1F9FF\"\n  },\n  backgroundimage: {\n    height: \"120%\"\n  },\n  dabba: {\n    backgroundColor: \"white\",\n    height: 'auto',\n    marginHorizontal: 20,\n    borderRadius: 5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5,\n    marginTop: 150,\n    paddingHorizontal: 15,\n    borderColor: \"#5EB668\",\n    borderWidth: .4,\n    paddingTop: 10,\n    paddingBottom: 15\n  },\n  welcome: {\n    marginTop: 20,\n    color: '#1D2327',\n    fontSize: 18,\n    fontFamily: \"Poppins-Bold\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  urnam: {\n    fontFamily: \"Poppins-Regular\",\n    marginTop: 6,\n    color: '#1D2327',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  innput: {\n    height: 40,\n    marginTop: 20\n  },\n  logbutton: {\n    marginTop: 10,\n    width: 184,\n    height: 40\n  },\n  bulogin: {\n    fontSize: 16,\n    fontFamily: \"Poppins-Bold\",\n    color: \"#FFFFFF\"\n  },\n  afterdabba: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20\n  },\n  newuserr: {\n    color: \"#2F4858\",\n    fontSize: 10\n  },\n  signup: {\n    color: '#00AF50',\n    fontFamily: \"Poppins-Regular\",\n    fontSize: 10\n  },\n  forgatepaas: {\n    marginTop: 20,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  fp: {\n    fontSize: 15,\n    color: '#2F4858',\n    fontFamily: \"Poppins-Light\"\n  },\n  eye: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: .5,\n    borderColor: '#ADEEB4',\n    borderRadius: 5\n  },\n  textinputstyle: {\n    height: 45,\n    paddingLeft: 5\n  },\n  Vieweye: {\n    borderWidth: .5,\n    borderColor: '#9AE6B4',\n    borderRadius: 5\n  },\n  errorMessage: {\n    fontSize: 12,\n    color: \"red\",\n    marginLeft: 0\n  }\n});\nexport default Resetpassword;","map":{"version":3,"sources":["/home/brijesh/Desktop/Abhigyaan-main/screens/resetpassword.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Forgatt","LinearGradient","Resetpassword","route","navigation","dispatch","enteredotp","setenteredotp","enteredpassword","setenteredpassword","enteredpasswordagain","setenteredpasswordagain","error","seterror","isloadingm","setisloadingm","otpErr","setOtpErr","passErr","setPassErr","cnfPassErr","setCnfPassErr","student_id","state","Fog","otphandler","enteredText","passwordhandler","passwordhandleragain","resetpass","details","otp","new_password","confirm_password","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","headers","body","then","res","json","status","JSON","stringify","message","Alert","alert","text","onPress","navigate","catch","err","styles","main","position","left","right","top","height","backgroundimage","require","dabba","urnam","Vieweye","textinputstyle","errorMessage","marginTop","marginBottom","marginLeft","marginRight","padding","alignItems","borderRadius","width","backgroundColor","fontSize","color","fontFamily","StyleSheet","create","flex","logo","justifyContent","image","borderWidth","borderColor","user","username","marginHorizontal","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","paddingHorizontal","paddingTop","paddingBottom","welcome","textAlign","innput","logbutton","bulogin","afterdabba","flexDirection","newuserr","signup","forgatepaas","fp","eye","paddingLeft"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Text,View,StyleSheet,\n    TextInput,Button, \n    Alert,\n    ActivityIndicator,\n    TouchableOpacity,\n    ImageBackground\n} from 'react-native';\nimport {useSelector,useDispatch} from 'react-redux';\nimport * as Forgatt from '../store/action/forgatepassword';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst Resetpassword=({route,navigation})=>{\n\n    const dispatch=useDispatch()\n    const [enteredotp,setenteredotp]=useState(\"\");\n    const [enteredpassword,setenteredpassword]=useState(\"\");\n    const [enteredpasswordagain,setenteredpasswordagain]=useState(\"\");\n    const [error,seterror]=useState();\n    const [isloadingm,setisloadingm]=useState(false)\n\n    const [otpErr,setOtpErr]=useState(false)\n    const [passErr,setPassErr]=useState(false)\n    const [cnfPassErr,setCnfPassErr]=useState(false)\n\n    const student_id=useSelector(state=>state.Fog.student_id)\n    const otphandler=(enteredText)=>{\n        setenteredotp(enteredText)\n    }\n    const passwordhandler=(enteredText)=>{\n        setenteredpassword(enteredText)\n    }\n    const passwordhandleragain=(enteredText)=>{\n        setenteredpasswordagain(enteredText)\n    }\n    const resetpass= async()=>{\n      seterror(null)\n      setisloadingm(true)\n\n      if(enteredotp == \"\"){\n          setOtpErr(true)\n      }else{\n          setOtpErr(false)\n      }\n      if(enteredpassword == \"\"){\n          setPassErr(true)\n      }else{\n        setPassErr(false)\n      }\n      if(enteredpasswordagain == \"\"){\n          setCnfPassErr(true)\n      }else{\n          setCnfPassErr(false)\n      }\n\n      if(otpErr || passErr || cnfPassErr){\n        setisloadingm(false)\n        return false\n      }\n\n      let details = {\n          student_id:student_id,\n          otp:enteredotp,\n          new_password:enteredpassword,\n          confirm_password:enteredpasswordagain\n      }\n\n      let formBody = [];\n      for (let property in details) {\n          let encodedKey = encodeURIComponent(property);\n          let encodedValue = encodeURIComponent(details[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n      }\n      formBody = formBody.join(\"&\");\n\n      fetch('http://ais.omsai.info/api/v1/reset_password', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n      }).then(res => res.json()).then(res => {\n        if(res.status != 200){\n          seterror(JSON.stringify(res.message))\n        }else{\n          Alert.alert(\"Success\" ,res.message,[\n              { text: \"OK\", onPress: () => navigation.navigate(\"Login\") }\n          ])\n        }\n        setisloadingm(false)\n      }).catch(err=>{\n        seterror(err.message)\n        setisloadingm(false)\n      })\n      }  \n      useEffect(() => {\n        if (error) {\n          Alert.alert('An Error Occurred!', error, [{ text: 'Okay' }]);\n        }\n      }, [error]);\n    return(\n      <View style={styles.main}>\n        <LinearGradient\n            colors={['#016129', '#016129']}\n            style={{\n              position: 'absolute',\n              left: 0,\n              right: 0,\n              top: 0,\n              height:\"100%\"\n              }}\n          />\n        <ImageBackground style={styles.backgroundimage} source={require(\"../assets/drawable-xxxhdpi/background.png\")}>\n      \n          <View style={styles.dabba}>\n              <Text style={styles.urnam}>Reset password</Text>\n              <Text>Otp</Text> \n              <View style={styles.Vieweye}>\n                  <TextInput \n                    style={styles.textinputstyle}\n                    placeholder=\"Otp\"\n                    keyboardType={'numeric'}\n                    onChangeText={otphandler}\n                    value={enteredotp}/>\n              </View>\n              { otpErr == true ? (\n                <Text style={styles.errorMessage}>\n                * OTP is required.\n                </Text>\n                ) : null  }\n              <Text style={{marginTop:20}}>New password</Text>\n              <View style={styles.Vieweye}>\n                <TextInput \n                  style={styles.textinputstyle}\n                  placeholder=\"New password\"\n                  onChangeText={passwordhandler}\n                  value={enteredpassword}\n                  secureTextEntry={true}\n                  />\n              </View>\n              { passErr == true ? (\n                <Text style={styles.errorMessage}>\n                * Password is required.\n                </Text>\n                ) : null  }\n              <Text style={{marginTop:20}}>Confirm New Password</Text>\n              <View style={styles.Vieweye}>\n                <TextInput \n                  style={styles.textinputstyle}\n                  placeholder=\"Confirm New Password\"\n                  onChangeText={passwordhandleragain}\n                  value={enteredpasswordagain}\n                  secureTextEntry={true}\n                />\n              </View>\n              { cnfPassErr == true ? (\n                <Text style={styles.errorMessage}>\n                * Confirm password is required.\n                </Text>\n                ) : null  }\n            <TouchableOpacity onPress={resetpass} style={{\n                  position:'relative',\n                  marginTop:0,\n                  marginBottom:0,\n                  marginLeft:'auto',\n                  marginRight:'auto'\n              }}>\n            <LinearGradient\n              colors={['#C53030', '#C53030']}\n              start={[.9,.0]}\n              style={{ padding: 7,\n              alignItems: 'center',\n              borderRadius: 5,\n              width:150,\n              marginTop:25 }}>\n              {isloadingm?<ActivityIndicator color=\"#ffffff\"/>:\n              <Text\n                style={{\n                  backgroundColor: 'transparent',\n                  fontSize: 16,\n                  color: '#fff',\n                  fontFamily:\"Poppins-Bold\"\n                }}>\n              Submit\n              </Text>}\n        </LinearGradient>\n    </TouchableOpacity>\n        </View>\n        </ImageBackground>\n      </View>\n    )\n}\nconst styles=StyleSheet.create({\n  main:{\n    flex:1\n  },\n  logo:{\n    backgroundColor:\"white\",\n    height:72,\n    width:72,\n    justifyContent:\"center\",\n    alignItems:'center',\n    marginTop:90,\n   marginLeft:158,\n   borderRadius:40 \n},\nimage:{\n    width:72,\n    height:72,\n    borderRadius:40,\n    borderWidth:3,\n    borderColor:\"#F1F9FF\"\n},\nuser:{\n    justifyContent:\"center\",\n    alignItems:\"center\",\n    marginTop:10\n},\nusername:{\n    fontSize:22,\n    fontFamily:\"Poppins-Bold\",\n    color:\"#F1F9FF\"\n},\nbackgroundimage:{\n  height:\"120%\"\n},\ndabba:{\n    backgroundColor:\"white\",\n    height:'auto',\n    marginHorizontal:20,\n    borderRadius:5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n    marginTop:150,\n    paddingHorizontal:15,\n    borderColor:\"#5EB668\",\n    borderWidth:.4,\n    paddingTop:10,\n    paddingBottom:15\n},\nwelcome:{\n    marginTop:20,\n    color:'#1D2327',\n    fontSize:18,\n    fontFamily:\"Poppins-Bold\",\n    justifyContent:\"center\",\n    alignItems:\"center\"\n},\nurnam:{\n    fontFamily:\"Poppins-Regular\",\n    marginTop:6,\n    color:'#1D2327',\n    fontSize:16,\n    textAlign:'center'\n},\ninnput:{\n    height:40,\n    marginTop:20\n},\nlogbutton:{\n    marginTop:10,\n    width:184,\n    height:40,\n\n},\nbulogin:{\n    fontSize:16,\n    fontFamily:\"Poppins-Bold\",\n    color:\"#FFFFFF\"\n},\nafterdabba:{\n    flexDirection:\"row\",\n    justifyContent:\"center\",\n    marginTop:20\n},\nnewuserr:{\n    color:\"#2F4858\",\n    fontSize:10,\n\n},\nsignup:{\n    color:'#00AF50',\n    fontFamily:\"Poppins-Regular\",\n    fontSize:10\n},\nforgatepaas:{\n    marginTop:20,\n    justifyContent:'center',\n    alignItems:\"center\"\n},\nfp:{\n     fontSize:15,\n     color:'#2F4858',\n     fontFamily:\"Poppins-Light\"\n},\neye:{\n  flexDirection:\"row\",\n\n   alignItems:\"center\",\n\n   borderWidth:.5,\n   borderColor:'#ADEEB4',\n   borderRadius:5,\n   \n},\ntextinputstyle:{\n    height:45,\n    paddingLeft:5\n},\nVieweye:{\n  borderWidth:.5,\n  borderColor:'#9AE6B4',\n  borderRadius:5,\n},\nerrorMessage: {\n  fontSize: 12,\n  color:\"red\",\n  marginLeft:0,\n}\n});\nexport default Resetpassword;"]},"metadata":{},"sourceType":"module"}