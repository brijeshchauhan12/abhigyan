{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\react_native\\\\Abhigyaan\\\\navigation.js\";\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { BlurView } from 'expo-blur';\nimport { LinearGradient, Button } from 'expo-linear-gradient';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Confirmation, Dashboard, Login, Home, Profile, Signup, Liveclasses, Download, More, MathScreen, PdfRead, VideoPlayer, Forgatepassword, Resetpassword, Subplan } from \"./screens\";\nimport { set } from \"react-native-reanimated\";\n\nfunction MyTabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? ['selected'] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1,\n        height: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: isFocused ? '#673ab7' : '#222',\n        alignItems: \"center\",\n        fontFamily: \"Poppins-Regular\",\n        marginTop: 50,\n        fontSize: 8,\n        marginLeft: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, label));\n  }));\n}\n\nfunction ProfileStack() {\n  var profilStack = createStackNavigator();\n  return React.createElement(profilStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, React.createElement(profilStack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      headerStyle: {\n        backgroundColor: \"#76E483\"\n      },\n      headerTitle: \"PROFILE\",\n      headerTitleStyle: {\n        color: \"#2F4858\",\n        fontFamily: \"Rubik-Regular\",\n        fontSize: 18\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Text, {\n          style: {\n            color: \"white\",\n            fontFamily: \"Rubik-Medium\",\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }, \"Logout\");\n      },\n      headerRightContainerStyle: {\n        marginRight: 25\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }\n  }), React.createElement(profilStack.Screen, {\n    name: \"Subplan\",\n    component: Subplan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction HomeStack() {\n  var childStack = createStackNavigator();\n  return React.createElement(childStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, React.createElement(childStack.Screen, {\n    name: \"home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), React.createElement(childStack.Screen, {\n    name: \"MathScreen\",\n    component: MathScreen,\n    options: {\n      headerStyle: {\n        backgroundColor: \"#76E483\"\n      },\n      headerTitle: \"MATHEMATICS\",\n      headerTitleStyle: {\n        color: \"#2F4858\",\n        fontFamily: \"Rubik-Regular\",\n        fontSize: 18\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Text, {\n          style: {\n            color: \"white\",\n            fontFamily: \"Rubik-Medium\",\n            fontSize: 12\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }\n        }, \"Logout\");\n      },\n      headerRightContainerStyle: {\n        marginRight: 25\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), React.createElement(childStack.Screen, {\n    name: \"VideoPlayer\",\n    component: VideoPlayer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), React.createElement(childStack.Screen, {\n    name: \"PdfRead\",\n    component: PdfRead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction LoginStack() {\n  var LoginStack = createStackNavigator();\n  return React.createElement(LoginStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"Login\",\n    component: Confirmation,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"Forgatepassword\",\n    component: Forgatepassword,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 16\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"Resetpassword\",\n    component: Resetpassword,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 12\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"Signup\",\n    component: Signup,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"Confirmation\",\n    component: Confirmation,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 18\n    }\n  }));\n}\n\nfunction HomePf() {\n  var Tab = createBottomTabNavigator();\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"home\",\n    component: HomeStack,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size,\n            focused = _ref2.focused;\n        return React.createElement(MaterialIcons, {\n          name: \"home\",\n          size: 30,\n          color: color,\n          focused: focused,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"video\",\n    component: Liveclasses,\n    options: {\n      tabBarLabel: 'Liveclasses',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused,\n            size = _ref3.size,\n            tintColor = _ref3.tintColor,\n            color = _ref3.color;\n        return React.createElement(FontAwesome5, {\n          name: \"video\",\n          size: 24,\n          color: color,\n          focused: focused,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"download\",\n    component: Download,\n    options: {\n      tabBarLabel: 'download',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size,\n            focused = _ref4.focused;\n        return React.createElement(Entypo, {\n          name: \"download\",\n          size: 24,\n          color: color,\n          focused: focused,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"user\",\n    component: ProfileStack,\n    options: {\n      tabBarLabel: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size,\n            focused = _ref5.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"user-alt\",\n          size: 24,\n          color: color,\n          focused: focused,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 8\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 10\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"more\",\n    component: More,\n    options: {\n      tabBarLabel: 'More',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color,\n            size = _ref6.size;\n        return React.createElement(MaterialIcons, {\n          name: \"more-horiz\",\n          size: 24,\n          color: \"#2F4858\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function App() {\n  var Userotp = useSelector(function (state) {\n    return state.Auth.userotp;\n  });\n  console.log(\"this is the network otp \" + Userotp);\n  var registerstatus = useSelector(function (state) {\n    return state.OTP.finalstatus;\n  });\n  var allowlogin = useSelector(function (state) {\n    return state.Auth.allowuser;\n  });\n  console.log(\"this is kdfjlsfdj \" + allowlogin);\n  var Stack = createStackNavigator();\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }\n  }, !(allowlogin == 200) ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"LoginStack\",\n    component: LoginStack,\n    options: {\n      headerLeft: null,\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomePf,\n    options: {\n      headerShown: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/Projects/react_native/Abhigyaan/navigation.js"],"names":["React","AsyncStorage","NavigationContainer","createStackNavigator","createBottomTabNavigator","FontAwesome5","Entypo","MaterialIcons","Ionicons","BlurView","LinearGradient","Button","createAppContainer","createSwitchNavigator","useSelector","useDispatch","Confirmation","Dashboard","Login","Home","Profile","Signup","Liveclasses","Download","More","MathScreen","PdfRead","VideoPlayer","Forgatepassword","Resetpassword","Subplan","set","MyTabBar","state","descriptors","navigation","focusedOptions","routes","index","key","options","tabBarVisible","flexDirection","map","route","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","tabBarAccessibilityLabel","tabBarTestID","flex","height","color","alignItems","fontFamily","marginTop","fontSize","marginLeft","ProfileStack","profilStack","headerStyle","backgroundColor","headerTitle","headerTitleStyle","headerRight","headerRightContainerStyle","marginRight","HomeStack","childStack","LoginStack","headerLeft","headerShown","HomePf","Tab","activeTintColor","tabBarIcon","size","focused","tintColor","App","Userotp","Auth","userotp","console","log","registerstatus","OTP","finalstatus","allowlogin","allowuser","Stack"],"mappings":"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","sourcesContent":["\r\n// import { createStackNavigator } from \"react-navigation-stack\";\r\n\r\nimport \"react-native-gesture-handler\";\r\nimport * as React from \"react\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { View, Text ,TouchableOpacity} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { BlurView } from 'expo-blur';\r\nimport { LinearGradient,Button } from 'expo-linear-gradient';\r\nimport {createAppContainer,createSwitchNavigator} from 'react-navigation';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\nimport {\r\n   Confirmation,\r\n   Dashboard,\r\n   Login,\r\n   Home,\r\n   Profile,\r\n   Signup,\r\n   Liveclasses,\r\n   Download,\r\n   More,\r\n   MathScreen,\r\n   PdfRead,\r\n   VideoPlayer,\r\n   Forgatepassword,\r\n   Resetpassword,\r\n   Subplan\r\n  } from \"./screens\";\r\nimport { set } from \"react-native-reanimated\";\r\n  function MyTabBar({ state, descriptors, navigation }) {\r\n    const focusedOptions = descriptors[state.routes[state.index].key].options;\r\n  \r\n    if (focusedOptions.tabBarVisible === false) {\r\n      return null;\r\n    }\r\n  \r\n  \r\n\r\n    return (\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {state.routes.map((route, index) => {\r\n          const { options } = descriptors[route.key];\r\n          const label =\r\n              options.tabBarLabel !== undefined\r\n              ? options.tabBarLabel\r\n              : options.title !== undefined\r\n              ? options.title\r\n              : route.name;\r\n  \r\n          const isFocused = state.index === index;\r\n  \r\n          const onPress = () => {\r\n            const event = navigation.emit({\r\n              type: 'tabPress',\r\n              target: route.key,\r\n              canPreventDefault: true,\r\n            });\r\n  \r\n            if (!isFocused && !event.defaultPrevented) {\r\n              navigation.navigate(route.name);\r\n            }\r\n          };\r\n  \r\n          const onLongPress = () => {\r\n            navigation.emit({\r\n              type: 'tabLongPress',\r\n              target: route.key,\r\n            });\r\n          };\r\n  \r\n          return (\r\n            <TouchableOpacity\r\n              accessibilityRole=\"button\"\r\n              accessibilityStates={isFocused ? ['selected'] : []}\r\n              accessibilityLabel={options.tabBarAccessibilityLabel}\r\n              testID={options.tabBarTestID}\r\n              onPress={onPress}\r\n              onLongPress={onLongPress}\r\n              style={{ flex: 1 , height:70}}\r\n            >\r\n              <Text style={{ color: isFocused ? '#673ab7' : '#222' ,\r\n                alignItems:\"center\",\r\n                fontFamily:\"Poppins-Regular\",\r\n                marginTop:50,\r\n                fontSize:8,\r\n                marginLeft:25\r\n               }}>\r\n                {label}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n\r\n function ProfileStack(){\r\n   const profilStack=createStackNavigator();\r\n   return(\r\n     <profilStack.Navigator>\r\n       <profilStack.Screen \r\n         name=\"Profile\"       \r\n         component={Profile} \r\n         \r\n         options={{\r\n          headerStyle:{\r\n            \r\n            backgroundColor:\"#76E483\",\r\n            \r\n\r\n          },\r\n          headerTitle:\"PROFILE\",\r\n          headerTitleStyle:{\r\n            color:\"#2F4858\",\r\n            fontFamily:\"Rubik-Regular\",\r\n            fontSize:18\r\n          },\r\n       \r\n          headerRight:()=>(\r\n            <Text style={{color:\"white\",\r\n                    fontFamily:\"Rubik-Medium\",\r\n                    fontSize:12\r\n          }}>Logout</Text>\r\n          ),\r\n          headerRightContainerStyle:{\r\n            marginRight:25\r\n          }\r\n        \r\n        }}\r\n\r\n         />\r\n           <profilStack.Screen \r\n         name=\"Subplan\"       \r\n         component={Subplan} \r\n\r\n         />\r\n     </profilStack.Navigator>\r\n   )\r\n } \r\n function HomeStack() {\r\n    const childStack = createStackNavigator();\r\n    return (\r\n      \r\n        <childStack.Navigator>\r\n          <childStack.Screen name=\"home\" component={Home} />\r\n          <childStack.Screen\r\n           name=\"MathScreen\"\r\n            component={MathScreen} \r\n            options={{\r\n              headerStyle:{\r\n                \r\n                backgroundColor:\"#76E483\",\r\n                \r\n\r\n              },\r\n              headerTitle:\"MATHEMATICS\",\r\n              headerTitleStyle:{\r\n                color:\"#2F4858\",\r\n                fontFamily:\"Rubik-Regular\",\r\n                fontSize:18\r\n              },\r\n           \r\n              headerRight:()=>(\r\n                <Text style={{color:\"white\",\r\n                        fontFamily:\"Rubik-Medium\",\r\n                        fontSize:12\r\n              }}>Logout</Text>\r\n              ),\r\n              headerRightContainerStyle:{\r\n                marginRight:25\r\n              }\r\n            \r\n            }}\r\n            />\r\n          <childStack.Screen name=\"VideoPlayer\" component={VideoPlayer} />\r\n        <childStack.Screen name=\"PdfRead\" component={PdfRead} />\r\n        </childStack.Navigator>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n  function LoginStack(){\r\n    const LoginStack=createStackNavigator();\r\n    return(\r\n      <LoginStack.Navigator>\r\n        <LoginStack.Screen \r\n          name=\"Login\"       \r\n          component={Confirmation} \r\n          \r\n          options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n \r\n          />\r\n               <LoginStack.Screen \r\n          name=\"Forgatepassword\"       \r\n          component={Forgatepassword} \r\n          \r\n          options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n \r\n          />\r\n           <LoginStack.Screen \r\n          name=\"Resetpassword\"       \r\n          component={Resetpassword} \r\n          \r\n          options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n \r\n          />\r\n              <LoginStack.Screen \r\n          name=\"Signup\"       \r\n          component={Signup} \r\n          \r\n          options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n \r\n          />\r\n                 <LoginStack.Screen \r\n          name=\"Confirmation\"       \r\n          component={Confirmation} \r\n          \r\n          options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n \r\n          />\r\n      </LoginStack.Navigator>\r\n    )\r\n  } \r\n\r\n\r\n  function HomePf(){\r\n  const Tab = createBottomTabNavigator();\r\n    return(\r\n         \r\n           <Tab.Navigator \r\n         // tabBar={props => <MyTabBar {...props} />}\r\n          tabBarOptions={{\r\n            activeTintColor: 'green',\r\n          }}\r\n          \r\n        \r\n           >\r\n                <Tab.Screen name=\"home\" component={HomeStack}\r\n         options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarIcon: ({ color, size,focused }) => (\r\n            <MaterialIcons name=\"home\" size={30} color={color} focused={focused} /> \r\n          ),\r\n          \r\n        }}   \r\n         /> \r\n        <Tab.Screen name=\"video\" \r\n        component={Liveclasses} \r\n      \r\n        options={{\r\n          tabBarLabel: 'Liveclasses',\r\n          tabBarIcon: ({focused, size ,tintColor,color}) => (\r\n            <FontAwesome5 name=\"video\" size={24}  color={ color} focused={focused}/>\r\n          )\r\n\r\n      \r\n\r\n        }}   \r\n        />\r\n        <Tab.Screen name=\"download\" component={Download} \r\n         options={{\r\n          tabBarLabel: 'download',\r\n          tabBarIcon: ({ color, size ,focused}) => (\r\n            \r\n            <Entypo name=\"download\" size={24} color={color} focused={focused} />\r\n          ),\r\n        }}   \r\n        />\r\n         {/* <Tab.Screen name=\"Home\" component={HomeStack}\r\n         options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarIcon: ({ color, size,focused }) => (\r\n            <MaterialIcons name=\"home\" size={30} color={color} focused={focused} /> \r\n          ),\r\n        }}   \r\n         />  */}\r\n         <Tab.Screen name=\"user\" component={ProfileStack} \r\n         options={{\r\n          tabBarLabel: 'Profile',\r\n          tabBarIcon: ({ color, size,focused }) => (\r\n       <FontAwesome5 name=\"user-alt\" size={24} color={color} focused={focused} />\r\n          ),\r\n        }}   \r\n    \r\n         />\r\n         <Tab.Screen name=\"more\" component={More}\r\n         options={{\r\n          tabBarLabel: 'More',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialIcons name=\"more-horiz\" size={24} color=\"#2F4858\" />\r\n          ),\r\n        }}   \r\n         />\r\n       \r\n           </Tab.Navigator>\r\n        \r\n    )\r\n   }\r\n\r\n export default function App() {\r\n  \r\n  const Userotp=useSelector(state=>state.Auth.userotp)\r\n  console.log(\"this is the network otp \"+Userotp)\r\n  const registerstatus=useSelector(state=>state.OTP.finalstatus)\r\n  const allowlogin=useSelector(state=>state.Auth.allowuser)\r\n  //const allowlogin=allow.status\r\n // console.log(\"this is the final status\"+registerstatus)\r\n  // const [allowusertoenter,setallowusertoenter]=React.useState(true)\r\n  console.log( \"this is kdfjlsfdj \"+allowlogin)\r\n  // if(Userotp==Userotpsign){\r\n  //   setallowusertoenter(false)\r\n  // }\r\n\r\n  const Stack = createStackNavigator();\r\n\r\n  return (\r\n\r\n    <NavigationContainer>\r\n      <Stack.Navigator >\r\n        {\r\n        \r\n       !( allowlogin==200 ) ?(\r\n         <>\r\n        <Stack.Screen name=\"LoginStack\" component={LoginStack}\r\n           options={{\r\n            headerLeft:null,\r\n            headerShown:null\r\n          }}\r\n        />\r\n        {/* <Stack.Screen name=\"Signup\" component={Signup} \r\n             options={{\r\n              headerLeft:null,\r\n              headerShown:null\r\n            }}\r\n        \r\n        /> */}\r\n        {/* <Stack.Screen name=\"Confirmation\" component={Confirmation} \r\n        \r\n        options={{\r\n          headerLeft:null\r\n        }}\r\n        /> */}\r\n      </>):(\r\n        \r\n      <>\r\n        \r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomePf}\r\n        options={{\r\n          headerShown:null\r\n        }}\r\n        />\r\n      </>)}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n// export default function App() {\r\n//   const [state, dispatch] = React.useReducer(\r\n//     (prevState, action) => {\r\n//       switch (action.type) {\r\n//         case 'RESTORE_TOKEN':\r\n//           return {\r\n//             ...prevState,\r\n//             userToken: action.token,\r\n//             isLoading: false,\r\n//           };\r\n//         case 'SIGN_IN':\r\n//           return {\r\n//             ...prevState,\r\n//             isSignout: false,\r\n//             userToken: action.token,\r\n//           };\r\n//         case 'SIGN_OUT':\r\n//           return {\r\n//             ...prevState,\r\n//             isSignout: true,\r\n//             userToken: null,\r\n//           };\r\n//       }\r\n//     },\r\n//     {\r\n//       isLoading: true,\r\n//       isSignout: false,\r\n//       userToken: null,\r\n//     }\r\n//   );\r\n\r\n//   React.useEffect(() => {\r\n//     // Fetch the token from storage then navigate to our appropriate place\r\n//     const bootstrapAsync = async () => {\r\n//       let userToken;\r\n\r\n//       try {\r\n//         userToken = await AsyncStorage.getItem('userToken');\r\n//       } catch (e) {\r\n//         // Restoring token failed\r\n//       }\r\n\r\n//       // After restoring token, we may need to validate it in production apps\r\n\r\n//       // This will switch to the App screen or Auth screen and this loading\r\n//       // screen will be unmounted and thrown away.\r\n//       dispatch({ type: 'RESTORE_TOKEN', token: userToken });\r\n//     };\r\n\r\n//     bootstrapAsync();\r\n//   }, []);\r\n\r\n//   const authContext = React.useMemo(\r\n//     () => ({\r\n//       signIn: async data => {\r\n//         // In a production app, we need to send some data (usually username, password) to server and get a token\r\n//         // We will also need to handle errors if sign in failed\r\n//         // After getting token, we need to persist the token using `AsyncStorage`\r\n//         // In the example, we'll use a dummy token\r\n\r\n//         dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n//       },\r\n//       signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n//       signUp: async data => {\r\n//         // In a production app, we need to send user data to server and get a token\r\n//         // We will also need to handle errors if sign up failed\r\n//         // After getting token, we need to persist the token using `AsyncStorage`\r\n//         // In the example, we'll use a dummy token\r\n\r\n//         dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n//       },\r\n//     }),\r\n//     []\r\n//   );\r\n//   return (\r\n//     <AuthContext.Provider value={authContext}>\r\n\r\n//       <Stack.Navigator>\r\n//         {\r\n//          state.userToken == null ?(\r\n//          <>\r\n//         <Stack.Screen name=\"Login\" component={Login} />\r\n//         <Stack.Screen name=\"Signup\" component={Signup} \r\n//              options={{\r\n//               headerLeft:null\r\n//             }}\r\n        \r\n//         />\r\n//         <Stack.Screen name=\"Confirmation\" component={Confirmation} \r\n        \r\n//         options={{\r\n//           headerLeft:null\r\n//         }}\r\n//         />\r\n//       </>):(\r\n        \r\n//       <>\r\n        \r\n//         <Stack.Screen\r\n//           name=\"HomePf\"\r\n//           component={HomePf}\r\n//           options={{\r\n//             headerLeft:null\r\n//           }}\r\n//         />\r\n//       </>)}\r\n//       </Stack.Navigator>\r\n//       </AuthContext.Provider>\r\n//   );\r\n// }\r\n\r\n//   const SchoolNavigation=createSwitchNavigator({\r\n\r\n       \r\n       \r\n//     LoginS:{\r\n//         screen:Login,\r\n//         navigationOptions:{\r\n//          headerTitleAlign:\"center\",\r\n//          headerTitle:'SCHOOL-LOGIN',\r\n//          headerStyle:{\r\n//              backgroundColor:\"red\"\r\n//          }\r\n            \r\n//         }\r\n\r\n//     },\r\n//      Logins:{\r\n//         screen:Signup,\r\n//         navigationOptions:{\r\n//             headerTitleAlign:\"center\",\r\n//             headerTitle:\"STUDENT-LOGIN\",\r\n//             headerStyle:{\r\n//              backgroundColor:\"blue\"\r\n//          }\r\n            \r\n//         }\r\n//     },\r\n \r\n//     tabscreen:{\r\n//      screen:HomePf\r\n//    }\r\n   \r\n// },{\r\n//  defaultNavigationOptions:{\r\n//      headerStyle:{\r\n//           backgroundColor:\"red\"\r\n          \r\n//      },\r\n//      headerTitleStyle:{\r\n         \r\n         \r\n//      },\r\n//      headerTintColor:\"white\"\r\n//  }\r\n\r\n// });\r\n// export default SchoolNavigation;\r\n"]},"metadata":{},"sourceType":"module"}